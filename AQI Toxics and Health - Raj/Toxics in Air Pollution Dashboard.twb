<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1103.1137                               -->
<workbook source-build='10.4.1 (10400.17.1103.1137)' source-platform='mac' version='10.4' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='ToxicsinAirPollutionDashboard' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.4'>
      <aliases enabled='yes' />
      <column caption='Select County' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Salt Lake City, UT&quot;'>
        <calculation class='tableau' formula='&quot;Salt Lake City, UT&quot;' />
        <members>
          <member value='&quot;Abilene, TX&quot;' />
          <member value='&quot;Akron, OH&quot;' />
          <member value='&quot;Albany-Schenectady-Troy, NY&quot;' />
          <member value='&quot;Albuquerque, NM&quot;' />
          <member value='&quot;Allentown-Bethlehem-Easton, PA-NJ&quot;' />
          <member value='&quot;Alpena, MI&quot;' />
          <member value='&quot;Altoona, PA&quot;' />
          <member value='&quot;Amarillo, TX&quot;' />
          <member value='&quot;Anchorage, AK&quot;' />
          <member value='&quot;Ann Arbor, MI&quot;' />
          <member value='&quot;Arecibo, PR&quot;' />
          <member value='&quot;Athens-Clarke County, GA&quot;' />
          <member value='&quot;Atlanta-Sandy Springs-Roswell, GA&quot;' />
          <member value='&quot;Atlantic City-Hammonton, NJ&quot;' />
          <member value='&quot;Auburn, IN&quot;' />
          <member value='&quot;Augusta-Richmond County, GA-SC&quot;' />
          <member value='&quot;Augusta-Waterville, ME&quot;' />
          <member value='&quot;Austin-Round Rock, TX&quot;' />
          <member value='&quot;Bakersfield, CA&quot;' />
          <member value='&quot;Baltimore-Columbia-Towson, MD&quot;' />
          <member value='&quot;Bangor, ME&quot;' />
          <member value='&quot;Barre, VT&quot;' />
          <member value='&quot;Baton Rouge, LA&quot;' />
          <member value='&quot;Bay City, TX&quot;' />
          <member value='&quot;Beaumont-Port Arthur, TX&quot;' />
          <member value='&quot;Beaver Dam, WI&quot;' />
          <member value='&quot;Beckley, WV&quot;' />
          <member value='&quot;Bedford, IN&quot;' />
          <member value='&quot;Bellefontaine, OH&quot;' />
          <member value='&quot;Bemidji, MN&quot;' />
          <member value='&quot;Berlin, NH-VT&quot;' />
          <member value='&quot;Big Spring, TX&quot;' />
          <member value='&quot;Billings, MT&quot;' />
          <member value='&quot;Binghamton, NY&quot;' />
          <member value='&quot;Birmingham-Hoover, AL&quot;' />
          <member value='&quot;Bismarck, ND&quot;' />
          <member value='&quot;Bloomington, IL&quot;' />
          <member value='&quot;Bloomington, IN&quot;' />
          <member value='&quot;Boise City, ID&quot;' />
          <member value='&quot;Boston-Cambridge-Newton, MA-NH&quot;' />
          <member value='&quot;Boulder, CO&quot;' />
          <member value='&quot;Bowling Green, KY&quot;' />
          <member value='&quot;Brainerd, MN&quot;' />
          <member value='&quot;Bridgeport-Stamford-Norwalk, CT&quot;' />
          <member value='&quot;Brownsville-Harlingen, TX&quot;' />
          <member value='&quot;Brownwood, TX&quot;' />
          <member value='&quot;Brunswick, GA&quot;' />
          <member value='&quot;Buffalo-Cheektowaga-Niagara Falls, NY&quot;' />
          <member value='&quot;Burlington-South Burlington, VT&quot;' />
          <member value='&quot;Butte-Silver Bow, MT&quot;' />
          <member value='&quot;Ca?on City, CO&quot;' />
          <member value='&quot;Cadillac, MI&quot;' />
          <member value='&quot;Canton-Massillon, OH&quot;' />
          <member value='&quot;Carbondale-Marion, IL&quot;' />
          <member value='&quot;Cedar Rapids, IA&quot;' />
          <member value='&quot;Central City, KY&quot;' />
          <member value='&quot;Chambersburg-Waynesboro, PA&quot;' />
          <member value='&quot;Champaign-Urbana, IL&quot;' />
          <member value='&quot;Charleston-North Charleston, SC&quot;' />
          <member value='&quot;Charleston, WV&quot;' />
          <member value='&quot;Charlotte-Concord-Gastonia, NC-SC&quot;' />
          <member value='&quot;Chattanooga, TN-GA&quot;' />
          <member value='&quot;Chicago-Naperville-Elgin, IL-IN-WI&quot;' />
          <member value='&quot;Chico, CA&quot;' />
          <member value='&quot;Cincinnati, OH-KY-IN&quot;' />
          <member value='&quot;Claremont-Lebanon, NH-VT&quot;' />
          <member value='&quot;Clarksburg, WV&quot;' />
          <member value='&quot;Clarksville, TN-KY&quot;' />
          <member value='&quot;Clearlake, CA&quot;' />
          <member value='&quot;Cleveland-Elyria, OH&quot;' />
          <member value='&quot;Cleveland, TN&quot;' />
          <member value='&quot;Coco, PR&quot;' />
          <member value='&quot;Coeur d&apos;Alene, ID&quot;' />
          <member value='&quot;Colorado Springs, CO&quot;' />
          <member value='&quot;Columbia, SC&quot;' />
          <member value='&quot;Columbus, GA-AL&quot;' />
          <member value='&quot;Columbus, IN&quot;' />
          <member value='&quot;Columbus, OH&quot;' />
          <member value='&quot;Concord, NH&quot;' />
          <member value='&quot;Corinth, MS&quot;' />
          <member value='&quot;Corpus Christi, TX&quot;' />
          <member value='&quot;Corsicana, TX&quot;' />
          <member value='&quot;Coshocton, OH&quot;' />
          <member value='&quot;Cumberland, MD-WV&quot;' />
          <member value='&quot;Dallas-Fort Worth-Arlington, TX&quot;' />
          <member value='&quot;Danville, VA&quot;' />
          <member value='&quot;Davenport-Moline-Rock Island, IA-IL&quot;' />
          <member value='&quot;Dayton, OH&quot;' />
          <member value='&quot;Decatur, IL&quot;' />
          <member value='&quot;Denver-Aurora-Lakewood, CO&quot;' />
          <member value='&quot;Des Moines-West Des Moines, IA&quot;' />
          <member value='&quot;Detroit-Warren-Dearborn, MI&quot;' />
          <member value='&quot;Dillon, SC&quot;' />
          <member value='&quot;Dodge City, KS&quot;' />
          <member value='&quot;Douglas, GA&quot;' />
          <member value='&quot;Dover, DE&quot;' />
          <member value='&quot;Dubuque, IA&quot;' />
          <member value='&quot;Duluth, MN-WI&quot;' />
          <member value='&quot;Durango, CO&quot;' />
          <member value='&quot;Durham-Chapel Hill, NC&quot;' />
          <member value='&quot;Eau Claire, WI&quot;' />
          <member value='&quot;Edwards, CO&quot;' />
          <member value='&quot;Effingham, IL&quot;' />
          <member value='&quot;El Centro, CA&quot;' />
          <member value='&quot;El Paso, TX&quot;' />
          <member value='&quot;Elizabethtown-Fort Knox, KY&quot;' />
          <member value='&quot;Erie, PA&quot;' />
          <member value='&quot;Eugene, OR&quot;' />
          <member value='&quot;Eureka-Arcata-Fortuna, CA&quot;' />
          <member value='&quot;Evansville, IN-KY&quot;' />
          <member value='&quot;Fairbanks, AK&quot;' />
          <member value='&quot;Fairmont, WV&quot;' />
          <member value='&quot;Fargo, ND-MN&quot;' />
          <member value='&quot;Farmington, MO&quot;' />
          <member value='&quot;Fayetteville, NC&quot;' />
          <member value='&quot;Flagstaff, AZ&quot;' />
          <member value='&quot;Flint, MI&quot;' />
          <member value='&quot;Florence-Muscle Shoals, AL&quot;' />
          <member value='&quot;Florence, SC&quot;' />
          <member value='&quot;Fort Collins, CO&quot;' />
          <member value='&quot;Fort Wayne, IN&quot;' />
          <member value='&quot;Frankfort, KY&quot;' />
          <member value='&quot;Fremont, NE&quot;' />
          <member value='&quot;Fremont, OH&quot;' />
          <member value='&quot;Fresno, CA&quot;' />
          <member value='&quot;Gadsden, AL&quot;' />
          <member value='&quot;Gainesville, GA&quot;' />
          <member value='&quot;Galesburg, IL&quot;' />
          <member value='&quot;Gallup, NM&quot;' />
          <member value='&quot;Georgetown, SC&quot;' />
          <member value='&quot;Glasgow, KY&quot;' />
          <member value='&quot;Glenwood Springs, CO&quot;' />
          <member value='&quot;Grand Forks, ND-MN&quot;' />
          <member value='&quot;Grand Junction, CO&quot;' />
          <member value='&quot;Grand Rapids-Wyoming, MI&quot;' />
          <member value='&quot;Grants Pass, OR&quot;' />
          <member value='&quot;Great Falls, MT&quot;' />
          <member value='&quot;Greeley, CO&quot;' />
          <member value='&quot;Green Bay, WI&quot;' />
          <member value='&quot;Greensboro-High Point, NC&quot;' />
          <member value='&quot;Greenville-Anderson-Mauldin, SC&quot;' />
          <member value='&quot;Greenwood, SC&quot;' />
          <member value='&quot;Gulfport-Biloxi-Pascagoula, MS&quot;' />
          <member value='&quot;Hagerstown-Martinsburg, MD-WV&quot;' />
          <member value='&quot;Hailey, ID&quot;' />
          <member value='&quot;Harrisburg-Carlisle, PA&quot;' />
          <member value='&quot;Hartford-West Hartford-East Hartford, CT&quot;' />
          <member value='&quot;Helena, MT&quot;' />
          <member value='&quot;Hickory-Lenoir-Morganton, NC&quot;' />
          <member value='&quot;Hilo, HI&quot;' />
          <member value='&quot;Hilton Head Island-Bluffton-Beaufort, SC&quot;' />
          <member value='&quot;Houston-The Woodlands-Sugar Land, TX&quot;' />
          <member value='&quot;Huntington-Ashland, WV-KY-OH&quot;' />
          <member value='&quot;Huntsville, AL&quot;' />
          <member value='&quot;Idaho Falls, ID&quot;' />
          <member value='&quot;Indiana, PA&quot;' />
          <member value='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
          <member value='&quot;Ionia, MI&quot;' />
          <member value='&quot;Jackson, MS&quot;' />
          <member value='&quot;Jackson, TN&quot;' />
          <member value='&quot;Jackson, WY-ID&quot;' />
          <member value='&quot;Jacksonville, FL&quot;' />
          <member value='&quot;Jamestown, ND&quot;' />
          <member value='&quot;Johnson City, TN&quot;' />
          <member value='&quot;Johnstown, PA&quot;' />
          <member value='&quot;Joplin, MO&quot;' />
          <member value='&quot;Juneau, AK&quot;' />
          <member value='&quot;Kalamazoo-Portage, MI&quot;' />
          <member value='&quot;Kalispell, MT&quot;' />
          <member value='&quot;Kankakee, IL&quot;' />
          <member value='&quot;Kansas City, MO-KS&quot;' />
          <member value='&quot;Keene, NH&quot;' />
          <member value='&quot;Kingsport-Bristol-Bristol, TN-VA&quot;' />
          <member value='&quot;Knoxville, TN&quot;' />
          <member value='&quot;Kokomo, IN&quot;' />
          <member value='&quot;Laconia, NH&quot;' />
          <member value='&quot;Lafayette-West Lafayette, IN&quot;' />
          <member value='&quot;Lake Havasu City-Kingman, AZ&quot;' />
          <member value='&quot;Lancaster, PA&quot;' />
          <member value='&quot;Lansing-East Lansing, MI&quot;' />
          <member value='&quot;Laredo, TX&quot;' />
          <member value='&quot;Las Cruces, NM&quot;' />
          <member value='&quot;Las Vegas-Henderson-Paradise, NV&quot;' />
          <member value='&quot;Lewiston-Auburn, ME&quot;' />
          <member value='&quot;Lewiston, ID-WA&quot;' />
          <member value='&quot;Lexington-Fayette, KY&quot;' />
          <member value='&quot;Lincoln, NE&quot;' />
          <member value='&quot;Little Rock-North Little Rock-Conway, AR&quot;' />
          <member value='&quot;London, KY&quot;' />
          <member value='&quot;Longview, TX&quot;' />
          <member value='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' />
          <member value='&quot;Louisville/Jefferson County, KY-IN&quot;' />
          <member value='&quot;Lubbock, TX&quot;' />
          <member value='&quot;Lynchburg, VA&quot;' />
          <member value='&quot;Macon, GA&quot;' />
          <member value='&quot;Madison, WI&quot;' />
          <member value='&quot;Madisonville, KY&quot;' />
          <member value='&quot;Malone, NY&quot;' />
          <member value='&quot;Manchester-Nashua, NH&quot;' />
          <member value='&quot;Manitowoc, WI&quot;' />
          <member value='&quot;Mansfield, OH&quot;' />
          <member value='&quot;Marietta, OH&quot;' />
          <member value='&quot;Marinette, WI-MI&quot;' />
          <member value='&quot;Marion, OH&quot;' />
          <member value='&quot;Mayfield, KY&quot;' />
          <member value='&quot;Maysville, KY&quot;' />
          <member value='&quot;McAlester, OK&quot;' />
          <member value='&quot;McAllen-Edinburg-Mission, TX&quot;' />
          <member value='&quot;Medford, OR&quot;' />
          <member value='&quot;Memphis, TN-MS-AR&quot;' />
          <member value='&quot;Merced, CA&quot;' />
          <member value='&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;' />
          <member value='&quot;Miami, OK&quot;' />
          <member value='&quot;Michigan City-La Porte, IN&quot;' />
          <member value='&quot;Middlesborough, KY&quot;' />
          <member value='&quot;Midland, MI&quot;' />
          <member value='&quot;Midland, TX&quot;' />
          <member value='&quot;Milledgeville, GA&quot;' />
          <member value='&quot;Milwaukee-Waukesha-West Allis, WI&quot;' />
          <member value='&quot;Minneapolis-St. Paul-Bloomington, MN-WI&quot;' />
          <member value='&quot;Minot, ND&quot;' />
          <member value='&quot;Missoula, MT&quot;' />
          <member value='&quot;Mobile, AL&quot;' />
          <member value='&quot;Modesto, CA&quot;' />
          <member value='&quot;Montrose, CO&quot;' />
          <member value='&quot;Morehead City, NC&quot;' />
          <member value='&quot;Morgan City, LA&quot;' />
          <member value='&quot;Morgantown, WV&quot;' />
          <member value='&quot;Morristown, TN&quot;' />
          <member value='&quot;Mount Pleasant, TX&quot;' />
          <member value='&quot;Mount Vernon, IL&quot;' />
          <member value='&quot;Muncie, IN&quot;' />
          <member value='&quot;Murray, KY&quot;' />
          <member value='&quot;Muskegon, MI&quot;' />
          <member value='&quot;Myrtle Beach-Conway-North Myrtle Beach, SC-NC&quot;' />
          <member value='&quot;Nacogdoches, TX&quot;' />
          <member value='&quot;Napa, CA&quot;' />
          <member value='&quot;Nashville-Davidson--Murfreesboro--Franklin, TN&quot;' />
          <member value='&quot;Natchez, MS-LA&quot;' />
          <member value='&quot;New Castle, PA&quot;' />
          <member value='&quot;New Haven-Milford, CT&quot;' />
          <member value='&quot;New Orleans-Metairie, LA&quot;' />
          <member value='&quot;New York-Newark-Jersey City, NY-NJ-PA&quot;' />
          <member value='&quot;Nogales, AZ&quot;' />
          <member value='&quot;Norwalk, OH&quot;' />
          <member value='&quot;Norwich-New London, CT&quot;' />
          <member value='&quot;Odessa, TX&quot;' />
          <member value='&quot;Ogden-Clearfield, UT&quot;' />
          <member value='&quot;Oklahoma City, OK&quot;' />
          <member value='&quot;Omaha-Council Bluffs, NE-IA&quot;' />
          <member value='&quot;Orlando-Kissimmee-Sanford, FL&quot;' />
          <member value='&quot;Ottawa-Peru, IL&quot;' />
          <member value='&quot;Owensboro, KY&quot;' />
          <member value='&quot;Owosso, MI&quot;' />
          <member value='&quot;Oxnard-Thousand Oaks-Ventura, CA&quot;' />
          <member value='&quot;Paducah, KY-IL&quot;' />
          <member value='&quot;Parkersburg-Vienna, WV&quot;' />
          <member value='&quot;Payson, AZ&quot;' />
          <member value='&quot;Pensacola-Ferry Pass-Brent, FL&quot;' />
          <member value='&quot;Peoria, IL&quot;' />
          <member value='&quot;Philadelphia-Camden-Wilmington, PA-NJ-DE-MD&quot;' />
          <member value='&quot;Phoenix-Mesa-Scottsdale, AZ&quot;' />
          <member value='&quot;Pittsburgh, PA&quot;' />
          <member value='&quot;Pocatello, ID&quot;' />
          <member value='&quot;Ponce, PR&quot;' />
          <member value='&quot;Port Lavaca, TX&quot;' />
          <member value='&quot;Portland-South Portland, ME&quot;' />
          <member value='&quot;Portland-Vancouver-Hillsboro, OR-WA&quot;' />
          <member value='&quot;Portsmouth, OH&quot;' />
          <member value='&quot;Pottsville, PA&quot;' />
          <member value='&quot;Prescott, AZ&quot;' />
          <member value='&quot;Providence-Warwick, RI-MA&quot;' />
          <member value='&quot;Provo-Orem, UT&quot;' />
          <member value='&quot;Pueblo, CO&quot;' />
          <member value='&quot;Quincy, IL-MO&quot;' />
          <member value='&quot;Racine, WI&quot;' />
          <member value='&quot;Raleigh, NC&quot;' />
          <member value='&quot;Rapid City, SD&quot;' />
          <member value='&quot;Reading, PA&quot;' />
          <member value='&quot;Reno, NV&quot;' />
          <member value='&quot;Richmond-Berea, KY&quot;' />
          <member value='&quot;Richmond, VA&quot;' />
          <member value='&quot;Riverside-San Bernardino-Ontario, CA&quot;' />
          <member value='&quot;Roanoke, VA&quot;' />
          <member value='&quot;Rochester, MN&quot;' />
          <member value='&quot;Rochester, NY&quot;' />
          <member value='&quot;Rockford, IL&quot;' />
          <member value='&quot;Rome, GA&quot;' />
          <member value='&quot;Rutland, VT&quot;' />
          <member value='&quot;Sacramento--Roseville--Arden-Arcade, CA&quot;' />
          <member value='&quot;Safford, AZ&quot;' />
          <member value='&quot;Saginaw, MI&quot;' />
          <member value='&quot;Salem, OH&quot;' />
          <member value='&quot;Salem, OR&quot;' />
          <member value='&quot;Salina, KS&quot;' />
          <member value='&quot;Salinas, CA&quot;' />
          <member value='&quot;Salisbury, MD-DE&quot;' />
          <member value='&quot;Salt Lake City, UT&quot;' />
          <member value='&quot;San Angelo, TX&quot;' />
          <member value='&quot;San Antonio-New Braunfels, TX&quot;' />
          <member value='&quot;San Diego-Carlsbad, CA&quot;' />
          <member value='&quot;San Francisco-Oakland-Hayward, CA&quot;' />
          <member value='&quot;San Jose-Sunnyvale-Santa Clara, CA&quot;' />
          <member value='&quot;San Juan-Carolina-Caguas, PR&quot;' />
          <member value='&quot;San Luis Obispo-Paso Robles-Arroyo Grande, CA&quot;' />
          <member value='&quot;Santa Maria-Santa Barbara, CA&quot;' />
          <member value='&quot;Santa Rosa, CA&quot;' />
          <member value='&quot;Sault Ste. Marie, MI&quot;' />
          <member value='&quot;Savannah, GA&quot;' />
          <member value='&quot;Scranton--Wilkes-Barre--Hazleton, PA&quot;' />
          <member value='&quot;Seattle-Tacoma-Bellevue, WA&quot;' />
          <member value='&quot;Sheboygan, WI&quot;' />
          <member value='&quot;Sherman-Denison, TX&quot;' />
          <member value='&quot;Show Low, AZ&quot;' />
          <member value='&quot;Shreveport-Bossier City, LA&quot;' />
          <member value='&quot;Sierra Vista-Douglas, AZ&quot;' />
          <member value='&quot;Silver City, NM&quot;' />
          <member value='&quot;Somerset, KY&quot;' />
          <member value='&quot;Sonora, CA&quot;' />
          <member value='&quot;South Bend-Mishawaka, IN-MI&quot;' />
          <member value='&quot;Spartanburg, SC&quot;' />
          <member value='&quot;Spokane-Spokane Valley, WA&quot;' />
          <member value='&quot;Springfield, IL&quot;' />
          <member value='&quot;Springfield, MA&quot;' />
          <member value='&quot;St. Cloud, MN&quot;' />
          <member value='&quot;St. Louis, MO-IL&quot;' />
          <member value='&quot;Steamboat Springs, CO&quot;' />
          <member value='&quot;Sterling, CO&quot;' />
          <member value='&quot;Sterling, IL&quot;' />
          <member value='&quot;Stockton-Lodi, CA&quot;' />
          <member value='&quot;Sumter, SC&quot;' />
          <member value='&quot;Syracuse, NY&quot;' />
          <member value='&quot;Tampa-St. Petersburg-Clearwater, FL&quot;' />
          <member value='&quot;Terre Haute, IN&quot;' />
          <member value='&quot;Texarkana, TX-AR&quot;' />
          <member value='&quot;Toledo, OH&quot;' />
          <member value='&quot;Topeka, KS&quot;' />
          <member value='&quot;Torrington, CT&quot;' />
          <member value='&quot;Traverse City, MI&quot;' />
          <member value='&quot;Trenton, NJ&quot;' />
          <member value='&quot;Troy, AL&quot;' />
          <member value='&quot;Tucson, AZ&quot;' />
          <member value='&quot;Tulsa, OK&quot;' />
          <member value='&quot;Tyler, TX&quot;' />
          <member value='&quot;Ukiah, CA&quot;' />
          <member value='&quot;Urban Honolulu, HI&quot;' />
          <member value='&quot;Utica-Rome, NY&quot;' />
          <member value='&quot;Valdosta, GA&quot;' />
          <member value='&quot;Vallejo-Fairfield, CA&quot;' />
          <member value='&quot;Victoria, TX&quot;' />
          <member value='&quot;Vineland-Bridgeton, NJ&quot;' />
          <member value='&quot;Virginia Beach-Norfolk-Newport News, VA-NC&quot;' />
          <member value='&quot;Visalia-Porterville, CA&quot;' />
          <member value='&quot;Waco, TX&quot;' />
          <member value='&quot;Warner Robins, GA&quot;' />
          <member value='&quot;Washington-Arlington-Alexandria, DC-VA-MD-WV&quot;' />
          <member value='&quot;Waterloo-Cedar Falls, IA&quot;' />
          <member value='&quot;Watertown-Fort Drum, NY&quot;' />
          <member value='&quot;Weirton-Steubenville, WV-OH&quot;' />
          <member value='&quot;Wheeling, WV-OH&quot;' />
          <member value='&quot;Wichita Falls, TX&quot;' />
          <member value='&quot;Wichita, KS&quot;' />
          <member value='&quot;Williamsport, PA&quot;' />
          <member value='&quot;Wilmington, NC&quot;' />
          <member value='&quot;Wilmington, OH&quot;' />
          <member value='&quot;Winston-Salem, NC&quot;' />
          <member value='&quot;Wisconsin Rapids-Marshfield, WI&quot;' />
          <member value='&quot;Worcester, MA-CT&quot;' />
          <member value='&quot;York-Hanover, PA&quot;' />
          <member value='&quot;Youngstown-Warren-Boardman, OH-PA&quot;' />
          <member value='&quot;Yuma, AZ&quot;' />
        </members>
      </column>
      <column caption='Select Second County' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Abilene, TX&quot;'>
        <calculation class='tableau' formula='&quot;Abilene, TX&quot;' />
        <members>
          <member value='&quot;Abilene, TX&quot;' />
          <member value='&quot;Akron, OH&quot;' />
          <member value='&quot;Albany-Schenectady-Troy, NY&quot;' />
          <member value='&quot;Albuquerque, NM&quot;' />
          <member value='&quot;Allentown-Bethlehem-Easton, PA-NJ&quot;' />
          <member value='&quot;Alpena, MI&quot;' />
          <member value='&quot;Altoona, PA&quot;' />
          <member value='&quot;Amarillo, TX&quot;' />
          <member value='&quot;Anchorage, AK&quot;' />
          <member value='&quot;Ann Arbor, MI&quot;' />
          <member value='&quot;Arecibo, PR&quot;' />
          <member value='&quot;Athens-Clarke County, GA&quot;' />
          <member value='&quot;Atlanta-Sandy Springs-Roswell, GA&quot;' />
          <member value='&quot;Atlantic City-Hammonton, NJ&quot;' />
          <member value='&quot;Auburn, IN&quot;' />
          <member value='&quot;Augusta-Richmond County, GA-SC&quot;' />
          <member value='&quot;Augusta-Waterville, ME&quot;' />
          <member value='&quot;Austin-Round Rock, TX&quot;' />
          <member value='&quot;Bakersfield, CA&quot;' />
          <member value='&quot;Baltimore-Columbia-Towson, MD&quot;' />
          <member value='&quot;Bangor, ME&quot;' />
          <member value='&quot;Barre, VT&quot;' />
          <member value='&quot;Baton Rouge, LA&quot;' />
          <member value='&quot;Bay City, TX&quot;' />
          <member value='&quot;Beaumont-Port Arthur, TX&quot;' />
          <member value='&quot;Beaver Dam, WI&quot;' />
          <member value='&quot;Beckley, WV&quot;' />
          <member value='&quot;Bedford, IN&quot;' />
          <member value='&quot;Bellefontaine, OH&quot;' />
          <member value='&quot;Bemidji, MN&quot;' />
          <member value='&quot;Berlin, NH-VT&quot;' />
          <member value='&quot;Big Spring, TX&quot;' />
          <member value='&quot;Billings, MT&quot;' />
          <member value='&quot;Binghamton, NY&quot;' />
          <member value='&quot;Birmingham-Hoover, AL&quot;' />
          <member value='&quot;Bismarck, ND&quot;' />
          <member value='&quot;Bloomington, IL&quot;' />
          <member value='&quot;Bloomington, IN&quot;' />
          <member value='&quot;Boise City, ID&quot;' />
          <member value='&quot;Boston-Cambridge-Newton, MA-NH&quot;' />
          <member value='&quot;Boulder, CO&quot;' />
          <member value='&quot;Bowling Green, KY&quot;' />
          <member value='&quot;Brainerd, MN&quot;' />
          <member value='&quot;Bridgeport-Stamford-Norwalk, CT&quot;' />
          <member value='&quot;Brownsville-Harlingen, TX&quot;' />
          <member value='&quot;Brownwood, TX&quot;' />
          <member value='&quot;Brunswick, GA&quot;' />
          <member value='&quot;Buffalo-Cheektowaga-Niagara Falls, NY&quot;' />
          <member value='&quot;Burlington-South Burlington, VT&quot;' />
          <member value='&quot;Butte-Silver Bow, MT&quot;' />
          <member value='&quot;Ca?on City, CO&quot;' />
          <member value='&quot;Cadillac, MI&quot;' />
          <member value='&quot;Canton-Massillon, OH&quot;' />
          <member value='&quot;Carbondale-Marion, IL&quot;' />
          <member value='&quot;Cedar Rapids, IA&quot;' />
          <member value='&quot;Central City, KY&quot;' />
          <member value='&quot;Chambersburg-Waynesboro, PA&quot;' />
          <member value='&quot;Champaign-Urbana, IL&quot;' />
          <member value='&quot;Charleston-North Charleston, SC&quot;' />
          <member value='&quot;Charleston, WV&quot;' />
          <member value='&quot;Charlotte-Concord-Gastonia, NC-SC&quot;' />
          <member value='&quot;Chattanooga, TN-GA&quot;' />
          <member value='&quot;Chicago-Naperville-Elgin, IL-IN-WI&quot;' />
          <member value='&quot;Chico, CA&quot;' />
          <member value='&quot;Cincinnati, OH-KY-IN&quot;' />
          <member value='&quot;Claremont-Lebanon, NH-VT&quot;' />
          <member value='&quot;Clarksburg, WV&quot;' />
          <member value='&quot;Clarksville, TN-KY&quot;' />
          <member value='&quot;Clearlake, CA&quot;' />
          <member value='&quot;Cleveland-Elyria, OH&quot;' />
          <member value='&quot;Cleveland, TN&quot;' />
          <member value='&quot;Coco, PR&quot;' />
          <member value='&quot;Coeur d&apos;Alene, ID&quot;' />
          <member value='&quot;Colorado Springs, CO&quot;' />
          <member value='&quot;Columbia, SC&quot;' />
          <member value='&quot;Columbus, GA-AL&quot;' />
          <member value='&quot;Columbus, IN&quot;' />
          <member value='&quot;Columbus, OH&quot;' />
          <member value='&quot;Concord, NH&quot;' />
          <member value='&quot;Corinth, MS&quot;' />
          <member value='&quot;Corpus Christi, TX&quot;' />
          <member value='&quot;Corsicana, TX&quot;' />
          <member value='&quot;Coshocton, OH&quot;' />
          <member value='&quot;Cumberland, MD-WV&quot;' />
          <member value='&quot;Dallas-Fort Worth-Arlington, TX&quot;' />
          <member value='&quot;Danville, VA&quot;' />
          <member value='&quot;Davenport-Moline-Rock Island, IA-IL&quot;' />
          <member value='&quot;Dayton, OH&quot;' />
          <member value='&quot;Decatur, IL&quot;' />
          <member value='&quot;Denver-Aurora-Lakewood, CO&quot;' />
          <member value='&quot;Des Moines-West Des Moines, IA&quot;' />
          <member value='&quot;Detroit-Warren-Dearborn, MI&quot;' />
          <member value='&quot;Dillon, SC&quot;' />
          <member value='&quot;Dodge City, KS&quot;' />
          <member value='&quot;Douglas, GA&quot;' />
          <member value='&quot;Dover, DE&quot;' />
          <member value='&quot;Dubuque, IA&quot;' />
          <member value='&quot;Duluth, MN-WI&quot;' />
          <member value='&quot;Durango, CO&quot;' />
          <member value='&quot;Durham-Chapel Hill, NC&quot;' />
          <member value='&quot;Eau Claire, WI&quot;' />
          <member value='&quot;Edwards, CO&quot;' />
          <member value='&quot;Effingham, IL&quot;' />
          <member value='&quot;El Centro, CA&quot;' />
          <member value='&quot;El Paso, TX&quot;' />
          <member value='&quot;Elizabethtown-Fort Knox, KY&quot;' />
          <member value='&quot;Erie, PA&quot;' />
          <member value='&quot;Eugene, OR&quot;' />
          <member value='&quot;Eureka-Arcata-Fortuna, CA&quot;' />
          <member value='&quot;Evansville, IN-KY&quot;' />
          <member value='&quot;Fairbanks, AK&quot;' />
          <member value='&quot;Fairmont, WV&quot;' />
          <member value='&quot;Fargo, ND-MN&quot;' />
          <member value='&quot;Farmington, MO&quot;' />
          <member value='&quot;Fayetteville, NC&quot;' />
          <member value='&quot;Flagstaff, AZ&quot;' />
          <member value='&quot;Flint, MI&quot;' />
          <member value='&quot;Florence-Muscle Shoals, AL&quot;' />
          <member value='&quot;Florence, SC&quot;' />
          <member value='&quot;Fort Collins, CO&quot;' />
          <member value='&quot;Fort Wayne, IN&quot;' />
          <member value='&quot;Frankfort, KY&quot;' />
          <member value='&quot;Fremont, NE&quot;' />
          <member value='&quot;Fremont, OH&quot;' />
          <member value='&quot;Fresno, CA&quot;' />
          <member value='&quot;Gadsden, AL&quot;' />
          <member value='&quot;Gainesville, GA&quot;' />
          <member value='&quot;Galesburg, IL&quot;' />
          <member value='&quot;Gallup, NM&quot;' />
          <member value='&quot;Georgetown, SC&quot;' />
          <member value='&quot;Glasgow, KY&quot;' />
          <member value='&quot;Glenwood Springs, CO&quot;' />
          <member value='&quot;Grand Forks, ND-MN&quot;' />
          <member value='&quot;Grand Junction, CO&quot;' />
          <member value='&quot;Grand Rapids-Wyoming, MI&quot;' />
          <member value='&quot;Grants Pass, OR&quot;' />
          <member value='&quot;Great Falls, MT&quot;' />
          <member value='&quot;Greeley, CO&quot;' />
          <member value='&quot;Green Bay, WI&quot;' />
          <member value='&quot;Greensboro-High Point, NC&quot;' />
          <member value='&quot;Greenville-Anderson-Mauldin, SC&quot;' />
          <member value='&quot;Greenwood, SC&quot;' />
          <member value='&quot;Gulfport-Biloxi-Pascagoula, MS&quot;' />
          <member value='&quot;Hagerstown-Martinsburg, MD-WV&quot;' />
          <member value='&quot;Hailey, ID&quot;' />
          <member value='&quot;Harrisburg-Carlisle, PA&quot;' />
          <member value='&quot;Hartford-West Hartford-East Hartford, CT&quot;' />
          <member value='&quot;Helena, MT&quot;' />
          <member value='&quot;Hickory-Lenoir-Morganton, NC&quot;' />
          <member value='&quot;Hilo, HI&quot;' />
          <member value='&quot;Hilton Head Island-Bluffton-Beaufort, SC&quot;' />
          <member value='&quot;Houston-The Woodlands-Sugar Land, TX&quot;' />
          <member value='&quot;Huntington-Ashland, WV-KY-OH&quot;' />
          <member value='&quot;Huntsville, AL&quot;' />
          <member value='&quot;Idaho Falls, ID&quot;' />
          <member value='&quot;Indiana, PA&quot;' />
          <member value='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
          <member value='&quot;Ionia, MI&quot;' />
          <member value='&quot;Jackson, MS&quot;' />
          <member value='&quot;Jackson, TN&quot;' />
          <member value='&quot;Jackson, WY-ID&quot;' />
          <member value='&quot;Jacksonville, FL&quot;' />
          <member value='&quot;Jamestown, ND&quot;' />
          <member value='&quot;Johnson City, TN&quot;' />
          <member value='&quot;Johnstown, PA&quot;' />
          <member value='&quot;Joplin, MO&quot;' />
          <member value='&quot;Juneau, AK&quot;' />
          <member value='&quot;Kalamazoo-Portage, MI&quot;' />
          <member value='&quot;Kalispell, MT&quot;' />
          <member value='&quot;Kankakee, IL&quot;' />
          <member value='&quot;Kansas City, MO-KS&quot;' />
          <member value='&quot;Keene, NH&quot;' />
          <member value='&quot;Kingsport-Bristol-Bristol, TN-VA&quot;' />
          <member value='&quot;Knoxville, TN&quot;' />
          <member value='&quot;Kokomo, IN&quot;' />
          <member value='&quot;Laconia, NH&quot;' />
          <member value='&quot;Lafayette-West Lafayette, IN&quot;' />
          <member value='&quot;Lake Havasu City-Kingman, AZ&quot;' />
          <member value='&quot;Lancaster, PA&quot;' />
          <member value='&quot;Lansing-East Lansing, MI&quot;' />
          <member value='&quot;Laredo, TX&quot;' />
          <member value='&quot;Las Cruces, NM&quot;' />
          <member value='&quot;Las Vegas-Henderson-Paradise, NV&quot;' />
          <member value='&quot;Lewiston-Auburn, ME&quot;' />
          <member value='&quot;Lewiston, ID-WA&quot;' />
          <member value='&quot;Lexington-Fayette, KY&quot;' />
          <member value='&quot;Lincoln, NE&quot;' />
          <member value='&quot;Little Rock-North Little Rock-Conway, AR&quot;' />
          <member value='&quot;London, KY&quot;' />
          <member value='&quot;Longview, TX&quot;' />
          <member value='&quot;Los Angeles-Long Beach-Anaheim, CA&quot;' />
          <member value='&quot;Louisville/Jefferson County, KY-IN&quot;' />
          <member value='&quot;Lubbock, TX&quot;' />
          <member value='&quot;Lynchburg, VA&quot;' />
          <member value='&quot;Macon, GA&quot;' />
          <member value='&quot;Madison, WI&quot;' />
          <member value='&quot;Madisonville, KY&quot;' />
          <member value='&quot;Malone, NY&quot;' />
          <member value='&quot;Manchester-Nashua, NH&quot;' />
          <member value='&quot;Manitowoc, WI&quot;' />
          <member value='&quot;Mansfield, OH&quot;' />
          <member value='&quot;Marietta, OH&quot;' />
          <member value='&quot;Marinette, WI-MI&quot;' />
          <member value='&quot;Marion, OH&quot;' />
          <member value='&quot;Mayfield, KY&quot;' />
          <member value='&quot;Maysville, KY&quot;' />
          <member value='&quot;McAlester, OK&quot;' />
          <member value='&quot;McAllen-Edinburg-Mission, TX&quot;' />
          <member value='&quot;Medford, OR&quot;' />
          <member value='&quot;Memphis, TN-MS-AR&quot;' />
          <member value='&quot;Merced, CA&quot;' />
          <member value='&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;' />
          <member value='&quot;Miami, OK&quot;' />
          <member value='&quot;Michigan City-La Porte, IN&quot;' />
          <member value='&quot;Middlesborough, KY&quot;' />
          <member value='&quot;Midland, MI&quot;' />
          <member value='&quot;Midland, TX&quot;' />
          <member value='&quot;Milledgeville, GA&quot;' />
          <member value='&quot;Milwaukee-Waukesha-West Allis, WI&quot;' />
          <member value='&quot;Minneapolis-St. Paul-Bloomington, MN-WI&quot;' />
          <member value='&quot;Minot, ND&quot;' />
          <member value='&quot;Missoula, MT&quot;' />
          <member value='&quot;Mobile, AL&quot;' />
          <member value='&quot;Modesto, CA&quot;' />
          <member value='&quot;Montrose, CO&quot;' />
          <member value='&quot;Morehead City, NC&quot;' />
          <member value='&quot;Morgan City, LA&quot;' />
          <member value='&quot;Morgantown, WV&quot;' />
          <member value='&quot;Morristown, TN&quot;' />
          <member value='&quot;Mount Pleasant, TX&quot;' />
          <member value='&quot;Mount Vernon, IL&quot;' />
          <member value='&quot;Muncie, IN&quot;' />
          <member value='&quot;Murray, KY&quot;' />
          <member value='&quot;Muskegon, MI&quot;' />
          <member value='&quot;Myrtle Beach-Conway-North Myrtle Beach, SC-NC&quot;' />
          <member value='&quot;Nacogdoches, TX&quot;' />
          <member value='&quot;Napa, CA&quot;' />
          <member value='&quot;Nashville-Davidson--Murfreesboro--Franklin, TN&quot;' />
          <member value='&quot;Natchez, MS-LA&quot;' />
          <member value='&quot;New Castle, PA&quot;' />
          <member value='&quot;New Haven-Milford, CT&quot;' />
          <member value='&quot;New Orleans-Metairie, LA&quot;' />
          <member value='&quot;New York-Newark-Jersey City, NY-NJ-PA&quot;' />
          <member value='&quot;Nogales, AZ&quot;' />
          <member value='&quot;Norwalk, OH&quot;' />
          <member value='&quot;Norwich-New London, CT&quot;' />
          <member value='&quot;Odessa, TX&quot;' />
          <member value='&quot;Ogden-Clearfield, UT&quot;' />
          <member value='&quot;Oklahoma City, OK&quot;' />
          <member value='&quot;Omaha-Council Bluffs, NE-IA&quot;' />
          <member value='&quot;Orlando-Kissimmee-Sanford, FL&quot;' />
          <member value='&quot;Ottawa-Peru, IL&quot;' />
          <member value='&quot;Owensboro, KY&quot;' />
          <member value='&quot;Owosso, MI&quot;' />
          <member value='&quot;Oxnard-Thousand Oaks-Ventura, CA&quot;' />
          <member value='&quot;Paducah, KY-IL&quot;' />
          <member value='&quot;Parkersburg-Vienna, WV&quot;' />
          <member value='&quot;Payson, AZ&quot;' />
          <member value='&quot;Pensacola-Ferry Pass-Brent, FL&quot;' />
          <member value='&quot;Peoria, IL&quot;' />
          <member value='&quot;Philadelphia-Camden-Wilmington, PA-NJ-DE-MD&quot;' />
          <member value='&quot;Phoenix-Mesa-Scottsdale, AZ&quot;' />
          <member value='&quot;Pittsburgh, PA&quot;' />
          <member value='&quot;Pocatello, ID&quot;' />
          <member value='&quot;Ponce, PR&quot;' />
          <member value='&quot;Port Lavaca, TX&quot;' />
          <member value='&quot;Portland-South Portland, ME&quot;' />
          <member value='&quot;Portland-Vancouver-Hillsboro, OR-WA&quot;' />
          <member value='&quot;Portsmouth, OH&quot;' />
          <member value='&quot;Pottsville, PA&quot;' />
          <member value='&quot;Prescott, AZ&quot;' />
          <member value='&quot;Providence-Warwick, RI-MA&quot;' />
          <member value='&quot;Provo-Orem, UT&quot;' />
          <member value='&quot;Pueblo, CO&quot;' />
          <member value='&quot;Quincy, IL-MO&quot;' />
          <member value='&quot;Racine, WI&quot;' />
          <member value='&quot;Raleigh, NC&quot;' />
          <member value='&quot;Rapid City, SD&quot;' />
          <member value='&quot;Reading, PA&quot;' />
          <member value='&quot;Reno, NV&quot;' />
          <member value='&quot;Richmond-Berea, KY&quot;' />
          <member value='&quot;Richmond, VA&quot;' />
          <member value='&quot;Riverside-San Bernardino-Ontario, CA&quot;' />
          <member value='&quot;Roanoke, VA&quot;' />
          <member value='&quot;Rochester, MN&quot;' />
          <member value='&quot;Rochester, NY&quot;' />
          <member value='&quot;Rockford, IL&quot;' />
          <member value='&quot;Rome, GA&quot;' />
          <member value='&quot;Rutland, VT&quot;' />
          <member value='&quot;Sacramento--Roseville--Arden-Arcade, CA&quot;' />
          <member value='&quot;Safford, AZ&quot;' />
          <member value='&quot;Saginaw, MI&quot;' />
          <member value='&quot;Salem, OH&quot;' />
          <member value='&quot;Salem, OR&quot;' />
          <member value='&quot;Salina, KS&quot;' />
          <member value='&quot;Salinas, CA&quot;' />
          <member value='&quot;Salisbury, MD-DE&quot;' />
          <member value='&quot;Salt Lake City, UT&quot;' />
          <member value='&quot;San Angelo, TX&quot;' />
          <member value='&quot;San Antonio-New Braunfels, TX&quot;' />
          <member value='&quot;San Diego-Carlsbad, CA&quot;' />
          <member value='&quot;San Francisco-Oakland-Hayward, CA&quot;' />
          <member value='&quot;San Jose-Sunnyvale-Santa Clara, CA&quot;' />
          <member value='&quot;San Juan-Carolina-Caguas, PR&quot;' />
          <member value='&quot;San Luis Obispo-Paso Robles-Arroyo Grande, CA&quot;' />
          <member value='&quot;Santa Maria-Santa Barbara, CA&quot;' />
          <member value='&quot;Santa Rosa, CA&quot;' />
          <member value='&quot;Sault Ste. Marie, MI&quot;' />
          <member value='&quot;Savannah, GA&quot;' />
          <member value='&quot;Scranton--Wilkes-Barre--Hazleton, PA&quot;' />
          <member value='&quot;Seattle-Tacoma-Bellevue, WA&quot;' />
          <member value='&quot;Sheboygan, WI&quot;' />
          <member value='&quot;Sherman-Denison, TX&quot;' />
          <member value='&quot;Show Low, AZ&quot;' />
          <member value='&quot;Shreveport-Bossier City, LA&quot;' />
          <member value='&quot;Sierra Vista-Douglas, AZ&quot;' />
          <member value='&quot;Silver City, NM&quot;' />
          <member value='&quot;Somerset, KY&quot;' />
          <member value='&quot;Sonora, CA&quot;' />
          <member value='&quot;South Bend-Mishawaka, IN-MI&quot;' />
          <member value='&quot;Spartanburg, SC&quot;' />
          <member value='&quot;Spokane-Spokane Valley, WA&quot;' />
          <member value='&quot;Springfield, IL&quot;' />
          <member value='&quot;Springfield, MA&quot;' />
          <member value='&quot;St. Cloud, MN&quot;' />
          <member value='&quot;St. Louis, MO-IL&quot;' />
          <member value='&quot;Steamboat Springs, CO&quot;' />
          <member value='&quot;Sterling, CO&quot;' />
          <member value='&quot;Sterling, IL&quot;' />
          <member value='&quot;Stockton-Lodi, CA&quot;' />
          <member value='&quot;Sumter, SC&quot;' />
          <member value='&quot;Syracuse, NY&quot;' />
          <member value='&quot;Tampa-St. Petersburg-Clearwater, FL&quot;' />
          <member value='&quot;Terre Haute, IN&quot;' />
          <member value='&quot;Texarkana, TX-AR&quot;' />
          <member value='&quot;Toledo, OH&quot;' />
          <member value='&quot;Topeka, KS&quot;' />
          <member value='&quot;Torrington, CT&quot;' />
          <member value='&quot;Traverse City, MI&quot;' />
          <member value='&quot;Trenton, NJ&quot;' />
          <member value='&quot;Troy, AL&quot;' />
          <member value='&quot;Tucson, AZ&quot;' />
          <member value='&quot;Tulsa, OK&quot;' />
          <member value='&quot;Tyler, TX&quot;' />
          <member value='&quot;Ukiah, CA&quot;' />
          <member value='&quot;Urban Honolulu, HI&quot;' />
          <member value='&quot;Utica-Rome, NY&quot;' />
          <member value='&quot;Valdosta, GA&quot;' />
          <member value='&quot;Vallejo-Fairfield, CA&quot;' />
          <member value='&quot;Victoria, TX&quot;' />
          <member value='&quot;Vineland-Bridgeton, NJ&quot;' />
          <member value='&quot;Virginia Beach-Norfolk-Newport News, VA-NC&quot;' />
          <member value='&quot;Visalia-Porterville, CA&quot;' />
          <member value='&quot;Waco, TX&quot;' />
          <member value='&quot;Warner Robins, GA&quot;' />
          <member value='&quot;Washington-Arlington-Alexandria, DC-VA-MD-WV&quot;' />
          <member value='&quot;Waterloo-Cedar Falls, IA&quot;' />
          <member value='&quot;Watertown-Fort Drum, NY&quot;' />
          <member value='&quot;Weirton-Steubenville, WV-OH&quot;' />
          <member value='&quot;Wheeling, WV-OH&quot;' />
          <member value='&quot;Wichita Falls, TX&quot;' />
          <member value='&quot;Wichita, KS&quot;' />
          <member value='&quot;Williamsport, PA&quot;' />
          <member value='&quot;Wilmington, NC&quot;' />
          <member value='&quot;Wilmington, OH&quot;' />
          <member value='&quot;Winston-Salem, NC&quot;' />
          <member value='&quot;Wisconsin Rapids-Marshfield, WI&quot;' />
          <member value='&quot;Worcester, MA-CT&quot;' />
          <member value='&quot;York-Hanover, PA&quot;' />
          <member value='&quot;Youngstown-Warren-Boardman, OH-PA&quot;' />
          <member value='&quot;Yuma, AZ&quot;' />
        </members>
      </column>
      <column caption='Set HAPS Threshold' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
        <calculation class='tableau' formula='0.29999999999999999' />
      </column>
      <column caption='Set Lead Threshold' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.14999999999999999'>
        <calculation class='tableau' formula='0.14999999999999999' />
      </column>
      <column caption='Set NONOxNOy Threshold' datatype='real' name='[Set HAPS Threshold (copy)]' param-domain-type='any' role='measure' type='quantitative' value='53.0'>
        <calculation class='tableau' formula='53.0' />
      </column>
      <column caption='Set VOCS Threshold' datatype='real' name='[Set NONOxNOy Threshold (copy)]' param-domain-type='any' role='measure' type='quantitative' value='150.0'>
        <calculation class='tableau' formula='150.0' />
      </column>
    </datasource>
    <datasource caption='Toxics_All_Consolidated (2)' inline='true' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Toxics_All_Consolidated' name='textscan.0t74vdr06xdl1t196xb6t0gumuud'>
            <connection class='textscan' directory='/Users/srinivvx/Desktop/w209 Dashboard/w209_Group_Project-master/Data/Combined-Toxics' filename='Toxics_All_Consolidated.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0t74vdr06xdl1t196xb6t0gumuud' name='Toxics_All_Consolidated.csv' table='[Toxics_All_Consolidated#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='1st Max Hour' ordinal='1' />
            <column datatype='real' name='1st Max Value' ordinal='2' />
            <column datatype='string' name='AQI' ordinal='3' />
            <column datatype='string' name='Address' ordinal='4' />
            <column datatype='real' name='Arithmetic Mean' ordinal='5' />
            <column datatype='real' name='CBSA Code' ordinal='6' />
            <column datatype='string' name='CBSA Name' ordinal='7' />
            <column datatype='string' name='CBSA Type' ordinal='8' />
            <column datatype='string' name='City Name' ordinal='9' />
            <column datatype='integer' name='County Code' ordinal='10' />
            <column datatype='string' name='County Name' ordinal='11' />
            <column datatype='date' name='Date Local' ordinal='12' />
            <column datatype='date' name='Date of Last Change' ordinal='13' />
            <column datatype='string' name='Datum' ordinal='14' />
            <column datatype='string' name='Event Type' ordinal='15' />
            <column datatype='real' name='Latitude' ordinal='16' />
            <column datatype='string' name='Local Site Name' ordinal='17' />
            <column datatype='real' name='Longitude' ordinal='18' />
            <column datatype='integer' name='Method Code' ordinal='19' />
            <column datatype='string' name='Method Name' ordinal='20' />
            <column datatype='integer' name='Observation Count' ordinal='21' />
            <column datatype='real' name='Observation Percent' ordinal='22' />
            <column datatype='integer' name='POC' ordinal='23' />
            <column datatype='integer' name='Parameter Code' ordinal='24' />
            <column datatype='string' name='Parameter Name' ordinal='25' />
            <column datatype='string' name='Pollutant Standard' ordinal='26' />
            <column datatype='string' name='Sample Duration' ordinal='27' />
            <column datatype='integer' name='Site Num' ordinal='28' />
            <column datatype='integer' name='State Code' ordinal='29' />
            <column datatype='string' name='State Name' ordinal='30' />
            <column datatype='string' name='TOXIC_CAT' ordinal='31' />
            <column datatype='string' name='Units of Measure' ordinal='32' />
            <column datatype='real' name='row_num' ordinal='33' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st Max Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1st Max Hour]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>1st Max Hour</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st Max Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1st Max Value]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>1st Max Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AQI</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AQI]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>AQI</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arithmetic Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arithmetic Mean]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Arithmetic Mean</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CBSA Code</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CBSA Code]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>CBSA Code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CBSA Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CBSA Name]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>CBSA Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CBSA Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CBSA Type]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>CBSA Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City Name]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>City Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[County Code]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>County Code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County Name]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>County Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Local</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date Local]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Date Local</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Last Change</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date of Last Change]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Date of Last Change</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Datum]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Datum</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event Type]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Event Type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Site Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Local Site Name]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Local Site Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Method Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Method Code]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Method Code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Method Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Method Name]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Method Name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Observation Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Observation Count]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Observation Count</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Observation Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Observation Percent]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Observation Percent</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POC</remote-name>
            <remote-type>20</remote-type>
            <local-name>[POC]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>POC</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parameter Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parameter Code]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Parameter Code</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parameter Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Parameter Name]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Parameter Name</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollutant Standard</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pollutant Standard]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Pollutant Standard</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sample Duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sample Duration]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Sample Duration</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Site Num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Site Num]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Site Num</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State Code]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>State Code</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State Name]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>State Name</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOXIC_CAT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TOXIC_CAT]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>TOXIC_CAT</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units of Measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Units of Measure]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>Units of Measure</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>row_num</remote-name>
            <remote-type>5</remote-type>
            <local-name>[row_num]</local-name>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias>row_num</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Toxics_All_Consolidated.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' hidden='true' name='[1st Max Hour]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[AQI]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Address]' role='dimension' type='nominal' />
      <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[CBSA Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[CBSA Type]' role='dimension' type='nominal' />
      <column caption='Lead National Average' datatype='real' name='[Calculation_87960941164285967]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;Lead&apos;: AVG([Arithmetic Mean]) }' />
      </column>
      <column caption='HAPS National Average' datatype='real' name='[Calculation_87960941170864144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;HAPS&apos;: AVG([Arithmetic Mean]) }' />
      </column>
      <column caption='VOCS National Average' datatype='real' name='[Calculation_87960941173313553]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;VOCS&apos;: AVG([Arithmetic Mean]) }' />
      </column>
      <column caption='NONOxNOy National Average' datatype='real' name='[Calculation_87960941175255058]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;NONOxNOy&apos;: AVG([Arithmetic Mean]) }' />
      </column>
      <column caption='Lead_Standard_Check' datatype='string' name='[Calculation_87960941412773909]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Arithmetic Mean]) &gt; 0.15 THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
      </column>
      <column datatype='string' hidden='true' name='[City Name]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' hidden='true' name='[County Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[County Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
      <column datatype='date' hidden='true' name='[Date of Last Change]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[Datum]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Event Type]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column caption='HAPS Monthly National Average' datatype='real' name='[HAPS National Average (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), MONTH([Date Local]),[TOXIC_CAT]=&apos;HAPS&apos;: AVG([1st Max Value]) }' />
      </column>
      <column caption='NONOxNOy_Max_Standard_Check' datatype='string' name='[HAPS_Max_Standard_Check (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([1st Max Value]) &gt; [Parameters].[Set HAPS Threshold (copy)] THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
      </column>
      <column caption='HAPS_Max_Standard_Check' datatype='string' name='[HAPS_Standard_Check (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([1st Max Value]) &gt; [Parameters].[Parameter 3] THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
      </column>
      <column aggregation='Avg' datatype='real' hidden='true' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Lead Monthly National Average' datatype='real' name='[Lead National Average (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date Local]),([Date Local]), [TOXIC_CAT]=&apos;Lead&apos;: AVG([1st Max Value]) }' />
      </column>
      <column caption='Lead_Max_Standard_Check' datatype='string' name='[Lead_Standard_Check (copy 2)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([1st Max Value]) &gt; [Parameters].[Parameter 4] THEN &quot;ABOVE EPA THRESHOLD&quot;&#10;ELSE &quot;BELOW EPA THRESHOLD&quot;&#10;END' />
      </column>
      <column caption='HAPS_Standard_Check' datatype='string' name='[Lead_Standard_Check (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Arithmetic Mean]) &gt; 0.60 THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
      </column>
      <column datatype='string' hidden='true' name='[Local Site Name]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' hidden='true' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Method Code]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[Method Name]' role='dimension' type='nominal' />
      <column caption='NONOxNOy Monthly National Average' datatype='real' name='[NONOxNOy National Average (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), MONTH([Date Local]), [TOXIC_CAT]=&apos;NONOxNOy&apos;: AVG([1st Max Value]) }' />
      </column>
      <column caption='VOCS_Max_Standard_Check' datatype='string' name='[NONOxNOy_Max_Standard_Check (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([1st Max Value]) &gt; [Parameters].[Set NONOxNOy Threshold (copy)] THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
      </column>
      <column datatype='integer' hidden='true' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' hidden='true' name='[Observation Count]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Observation Percent]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[POC]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Parameter Code]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[Parameter Name]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Pollutant Standard]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Sample Duration]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Site Num]' role='dimension' type='ordinal' />
      <column datatype='integer' hidden='true' name='[State Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Units of Measure]' role='dimension' type='nominal' />
      <column caption='VOCS Monthly National Average ' datatype='real' name='[VOCS National Average (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), MONTH([Date Local]), [TOXIC_CAT]=&apos;VOCS&apos;: AVG([1st Max Value]) }' />
      </column>
      <column caption='Row Num' datatype='real' hidden='true' name='[row_num]' role='dimension' type='ordinal' />
      <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_87960941164285967]' derivation='Avg' name='[avg:Calculation_87960941164285967:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_87960941170864144]' derivation='Avg' name='[avg:Calculation_87960941170864144:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_87960941173313553]' derivation='Avg' name='[avg:Calculation_87960941173313553:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_87960941175255058]' derivation='Avg' name='[avg:Calculation_87960941175255058:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_87960941412773909]' derivation='User' name='[usr:Calculation_87960941412773909:nk]' pivot='key' type='nominal' />
      <column-instance column='[HAPS_Max_Standard_Check (copy)]' derivation='User' name='[usr:HAPS_Max_Standard_Check (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[HAPS_Standard_Check (copy)]' derivation='User' name='[usr:HAPS_Standard_Check (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Lead_Standard_Check (copy 2)]' derivation='User' name='[usr:Lead_Standard_Check (copy 2):nk]' pivot='key' type='nominal' />
      <column-instance column='[Lead_Standard_Check (copy)]' derivation='User' name='[usr:Lead_Standard_Check (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[NONOxNOy_Max_Standard_Check (copy)]' derivation='User' name='[usr:NONOxNOy_Max_Standard_Check (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/srinivvx/Desktop/w209 Dashboard/w209_Group_Project-master/Data/Combined-Toxics/Toxics_All_Consolidated_ext.tde' schema='Extract' tablename='Extract' update-time='12/09/2017 07:08:51 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='13095160' timestamp-start='2017-12-09 07:08:51.152' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>1st Max Value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1st Max Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1st Max Value</remote-alias>
              <ordinal>0</ordinal>
              <family>Toxics_All_Consolidated.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112885</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>123806186.16771232</statistic>
                <statistic aggregation='Avg' datatype='real'>9.4543469623671896</statistic>
                <statistic aggregation='Min' datatype='real'>-8.3000000000000007</statistic>
                <statistic aggregation='Max' datatype='real'>21853.98</statistic>
                <statistic aggregation='Stdev' datatype='real'>66.622650286256885</statistic>
                <statistic aggregation='StdevP' datatype='real'>66.622647742467748</statistic>
                <statistic aggregation='Var' datatype='real'>4438.577531164884</statistic>
                <statistic aggregation='VarP' datatype='real'>4438.5771922169424</statistic>
                <statistic aggregation='Count' datatype='integer'>13095160</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59294385144.548592</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arithmetic Mean</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Arithmetic Mean]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arithmetic Mean</remote-alias>
              <ordinal>1</ordinal>
              <family>Toxics_All_Consolidated.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>474150</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>47943646.099768586</statistic>
                <statistic aggregation='Avg' datatype='real'>3.6611729906139816</statistic>
                <statistic aggregation='Min' datatype='real'>-8.4375</statistic>
                <statistic aggregation='Max' datatype='real'>11892.1</statistic>
                <statistic aggregation='Stdev' datatype='real'>23.229127673679045</statistic>
                <statistic aggregation='StdevP' datatype='real'>23.229126786743407</statistic>
                <statistic aggregation='Var' datatype='real'>539.59237248008162</statistic>
                <statistic aggregation='VarP' datatype='real'>539.59233127460016</statistic>
                <statistic aggregation='Count' datatype='integer'>13095160</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7241577894.9859219</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CBSA Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CBSA Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CBSA Name</remote-alias>
              <ordinal>2</ordinal>
              <family>Toxics_All_Consolidated.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>327</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adrian, MI&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yuba City, CA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12335361</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>County Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[County Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>County Name</remote-alias>
              <ordinal>3</ordinal>
              <family>Toxics_All_Consolidated.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>515</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Ada&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yukon-Koyukuk&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>13095160</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date Local</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date Local]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date Local</remote-alias>
              <ordinal>4</ordinal>
              <family>Toxics_All_Consolidated.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2680</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2010-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-05-13#</statistic>
                <statistic aggregation='Count' datatype='integer'>13095160</statistic>
                <statistic aggregation='Median' datatype='date'>#2013-04-07#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State Name</remote-alias>
              <ordinal>5</ordinal>
              <family>Toxics_All_Consolidated.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>13095160</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TOXIC_CAT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TOXIC_CAT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TOXIC_CAT</remote-alias>
              <ordinal>6</ordinal>
              <family>Toxics_All_Consolidated.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;HAPS&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VOCS&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>13095160</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[yr:Date Local:ok]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[yr:Date Local:ok]' member='2010' />
            <groupfilter function='member' level='[yr:Date Local:ok]' member='2011' />
            <groupfilter function='member' level='[yr:Date Local:ok]' member='2012' />
            <groupfilter function='member' level='[yr:Date Local:ok]' member='2013' />
            <groupfilter function='member' level='[yr:Date Local:ok]' member='2014' />
            <groupfilter function='member' level='[yr:Date Local:ok]' member='2015' />
            <groupfilter function='member' level='[yr:Date Local:ok]' member='2016' />
            <groupfilter function='member' level='[yr:Date Local:ok]' member='2017' />
          </groupfilter>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.249541' measure-ordering='alphabetic' measure-percentage='0.451376' parameter-percentage='0.299083' rowDisplayCount='1000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_87960941412773909:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;BELOW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ABOVE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Lead_Standard_Check (copy):nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;BELOW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ABOVE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:TOXIC_CAT:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HAPS&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;VOCS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NONOxNOy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lead&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:HAPS_Standard_Check (copy):nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;BELOW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ABOVE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Lead_Standard_Check (copy 2):nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;BELOW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BELOW EPA THRESHOLD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ABOVE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ABOVE EPA THRESHOLD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:HAPS_Max_Standard_Check (copy):nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;BELOW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ABOVE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:NONOxNOy_Max_Standard_Check (copy):nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;BELOW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ABOVE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1x2wyc40gr02ww1ez2rh20jcatyo].[sum:Population Estimate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941173313553:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941175255058:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CBSA Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Allentown-Bethlehem-Easton, PA-NJ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Berlin, NH-VT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambridge, MD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clarksville, TN-KY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland, TN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concord, NH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coshocton, OH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham-Chapel Hill, NC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florence, SC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenwood, SC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacksonville, FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jasper, IN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lancaster, PA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview, TX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marion, OH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Middlesborough, KY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New York-Newark-Jersey City, NY-NJ-PA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norwich-New London, CT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pontiac, IL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portland-South Portland, ME&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockford, IL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seattle-Tacoma-Bellevue, WA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Toledo, OH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vineland-Bridgeton, NJ&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vineyard Haven, MA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Winona, MN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Akron, OH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangor, ME&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barnstable Town, MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Branson, MO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brownsville-Harlingen, TX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clearlake, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbus, MS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines-West Des Moines, IA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eureka-Arcata-Fortuna, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Junction, CO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Houston-The Woodlands-Sugar Land, TX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indianapolis-Carmel-Anderson, IN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iron Mountain, MI-WI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laramie, WY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewiston, ID-WA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mayfield, KY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minot, ND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montgomery, AL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mount Pleasant, TX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pensacola-Ferry Pass-Brent, FL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redding, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Springs, WY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Francisco-Oakland-Hayward, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Springfield, IL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steamboat Springs, CO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tahlequah, OK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waco, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albany-Schenectady-Troy, NY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beaumont-Port Arthur, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butte-Silver Bow, MT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Centralia, WA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbia, SC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dodge City, KS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emporia, KS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fairmont, WV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fergus Falls, MN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grants Pass, OR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Green Bay, WI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Idaho Falls, ID&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kingsville, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington-Fayette, KY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manchester-Nashua, NH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mankato-North Mankato, MN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Memphis, TN-MS-AR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Napa, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside-San Bernardino-Ontario, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ruidoso, NM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria-Santa Barbara, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syracuse, NY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernal, UT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weirton-Steubenville, WV-OH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anchorage, AK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Birmingham-Hoover, AL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bismarck, ND&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carson City, NV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charleston, WV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cumberland, MD-WV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dalton, GA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Dorado, AR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frankfort, KY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenada, MS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hagerstown-Martinsburg, MD-WV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hartford-West Hartford-East Hartford, CT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kalispell, MT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lubbock, TX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McAlester, OK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Minneapolis-St. Paul-Bloomington, MN-WI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oklahoma City, OK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ottawa-Peru, IL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Providence-Warwick, RI-MA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Safford, AZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Cruz-Watsonville, CA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheboygan, WI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Vista-Douglas, AZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Truckee-Grass Valley, CA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tucson, AZ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Youngstown-Warren-Boardman, OH-PA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alpena, MI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Big Spring, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Rapids, IA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clinton, IA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corpus Christi, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dover, DE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eau Claire, WI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington, MO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Collins, CO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hanford-Corcoran, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Juneau, AK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Grande, OR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Los Alamos, NM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macon, GA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marshall, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Midland, MI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nogales, AZ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Port Angeles, WA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland-Vancouver-Hillsboro, OR-WA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pottsville, PA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rocky Mount, NC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sherman-Denison, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. George, UT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Topeka, KS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Winston-Salem, NC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;York-Hanover, PA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albert Lea, MN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beckley, WV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bellingham, WA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ca?on City, CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chambersburg-Waynesboro, PA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus, GA-AL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corning, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dubuque, IA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flagstaff, AZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greensboro-High Point, NC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ionia, MI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kinston, NC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln, NE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Merced, CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Milledgeville, GA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nashville-Davidson--Murfreesboro--Franklin, TN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norwalk, OH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Point Pleasant, WV-OH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ponce, PR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roanoke, VA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Rosa, CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tampa-St. Petersburg-Clearwater, FL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valdosta, GA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vincennes, IN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wichita Falls, TX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Winchester, VA-WV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Augusta-Waterville, ME&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bakersfield, CA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brainerd, MN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Claremont-Lebanon, NH-VT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur, IL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Effingham, IL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erie, PA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gardnerville Ranchos, NV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Glasgow, KY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Homosassa Springs, FL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Keene, NH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lake Havasu City-Kingman, AZ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lawrenceburg, TN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison, IN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mansfield, OH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morehead City, NC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natchez, MS-LA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paducah, KY-IL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prineville, OR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reading, PA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Antonio-New Braunfels, TX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sioux City, IA-NE-SD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Cloud, MN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy, AL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virginia Beach-Norfolk-Newport News, VA-NC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barre, VT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brownsville, TN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brownwood, TX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clarksburg, WV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cleveland-Elyria, OH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DeRidder, LA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detroit-Warren-Dearborn, MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Evansville, IN-KY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Forks, ND-MN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Rapids-Wyoming, MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hattiesburg, MS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huntington-Ashland, WV-KY-OH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laredo, TX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maysville, KY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Vernon-Anacortes, WA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Murray, KY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Port-Sarasota-Bradenton, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peoria, IL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reno, NV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salem, OR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Jose-Sunnyvale-Santa Clara, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sterling, CO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tallahassee, FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tulsa, OK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington-Arlington-Alexandria, DC-VA-MD-WV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlantic City-Hammonton, NJ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bozeman, MT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bridgeport-Stamford-Norwalk, CT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign-Urbana, IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dayton, OH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elko, NV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Farmington, NM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgetown, SC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hilton Head Island-Bluffton-Beaufort, SC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indiana, PA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kankakee, IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Knoxville, TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malone, NY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monroe, LA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monroe, MI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oxford, NC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Parkersburg-Vienna, WV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pittsburgh, PA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raleigh, NC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salt Lake City, UT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scottsboro, AL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sonora, CA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spokane-Spokane Valley, WA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tupelo, MS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vallejo-Fairfield, CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albuquerque, NM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bellefontaine, OH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bemidji, MN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cadillac, MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cheyenne, WY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbus, IN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duluth, MN-WI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Enid, OK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flint, MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenville-Anderson-Mauldin, SC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson, MS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Crosse-Onalaska, WI-MN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lafayette-West Lafayette, IN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Little Rock-North Little Rock-Conway, AR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marietta, OH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miami-Fort Lauderdale-West Palm Beach, FL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morgan City, LA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Haven-Milford, CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ponca City, OK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Clinton, OH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rochester, MN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sault Ste. Marie, MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sterling, IL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Terre Haute, IN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wausau, WI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wichita, KS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ann Arbor, MI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaver Dam, WI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bishop, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bloomington, IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlotte-Concord-Gastonia, NC-SC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas-Fort Worth-Arlington, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Paso, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evanston, WY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fresno, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hailey, ID&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Helena, MT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kansas City, MO-KS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lewisburg, PA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ludington, MI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madera, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Missoula, MT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Omaha-Council Bluffs, NE-IA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Owosso, MI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Provo-Orem, UT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saginaw, MI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sayre, PA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somerset, KY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tullahoma-Manchester, TN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yuba City, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yuma, AZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arecibo, PR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville, NC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Auburn, IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bloomington, IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chattanooga, TN-GA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Danville, VA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daphne-Fairhope-Foley, AL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elizabethtown-Fort Knox, KY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gadsden, AL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hickory-Lenoir-Morganton, NC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Johnson City, TN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kingsport-Bristol-Bristol, TN-VA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Logan, UT-ID&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lufkin, TX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madison, WI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mobile, AL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Orlando-Kissimmee-Sanford, FL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pueblo, CO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Quincy, IL-MO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverton, WY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salem, OH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Silver City, NM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Bend-Mishawaka, IN-MI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urban Honolulu, HI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warner Robins, GA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athens, OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Augusta-Richmond County, GA-SC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bowling Green, KY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cincinnati, OH-KY-IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corinth, MS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Decatur, AL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ellensburg, WA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gainesville, GA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gallup, NM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gettysburg, PA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Holland, MI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Charles, LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laurel, MS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manitowoc, WI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Meridian, MS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montrose, CO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oxnard-Thousand Oaks-Ventura, CA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Price, UT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rapid City, SD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rome, GA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Angelo, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Springfield, MA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Victoria, TX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Warsaw, IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wheeling, WV-OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Austin-Round Rock, TX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore-Columbia-Towson, MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bend-Redmond, OR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brookings, OR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deming, NM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver-Aurora-Lakewood, CO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eugene, OR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fremont, NE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glenwood Springs, CO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harrisonburg, VA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Houghton, MI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lansing-East Lansing, MI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lewiston-Auburn, ME&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marinette, WI-MI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami, OK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morristown, TN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Castle, PA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niles-Benton Harbor, MI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Payson, AZ&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Red Wing, MN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Diego-Carlsbad, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Falls, SD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Louis, MO-IL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Visalia-Porterville, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsport, PA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Billings, MT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carbondale-Marion, IL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central City, KY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coco, PR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Corsicana, TX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edwards, CO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Espa?ola, NM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fort Smith, AR-OK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Galesburg, IL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisburg-Carlisle, PA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamestown, ND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joplin, MO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kahului-Wailuku-Lahaina, HI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles-Long Beach-Anaheim, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Midland, TX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mount Vernon, IL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muskogee, OK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa, TX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portsmouth, OH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rutland, VT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salina, KS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Searcy, AR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Show Low, AZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Traverse City, MI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin Rapids-Marshfield, WI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yakima, WA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alexandria, MN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona, PA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baraboo, WI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bennington, VT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canton-Massillon, OH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbus, OH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Douglas, GA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Durango, CO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florence-Muscle Shoals, AL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenville, NC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hobbs, NM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson, TN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson, WY-ID&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Janesville-Beloit, WI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;London, KY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michigan City-La Porte, IN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morgantown, WV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muscatine, IA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Orleans-Metairie, LA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Lavaca, TX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rochester, NY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sanford, NC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Savannah, GA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scranton--Wilkes-Barre--Hazleton, PA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Springfield, MO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texarkana, TX-AR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wilmington, NC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adrian, MI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Baton Rouge, LA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boulder, CO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunswick, GA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Buffalo-Cheektowaga-Niagara Falls, NY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coeur d&apos;Alene, ID&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dickinson, ND&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fargo, ND-MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gillette, WY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Great Falls, MT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huntsville, AL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ithaca, NY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kokomo, IN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Las Cruces, NM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McAllen-Edinburg-Mission, TX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mountain Home, ID&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Muskegon, MI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philadelphia-Camden-Wilmington, PA-NJ-DE-MD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Richmond-Berea, KY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roswell, NM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salinas, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Juan-Carolina-Caguas, PR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stockton-Lodi, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taos, NM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukiah, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waterloo-Cedar Falls, IA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willmar, MN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atlanta-Sandy Springs-Roswell, GA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford, IN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise City, ID&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boston-Cambridge-Newton, MA-NH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chicago-Naperville-Elgin, IL-IN-WI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Davenport-Moline-Rock Island, IA-IL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elkhart-Goshen, IN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fremont, OH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Garden City, KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hilo, HI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Johnstown, PA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Klamath Falls, OR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Longview, WA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lynchburg, VA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madisonville, KY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Modesto, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nacogdoches, TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Owensboro, KY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama City, FL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Racine, WI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Salisbury, MD-DE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spartanburg, SC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stevens Point, WI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Torrington, CT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica-Rome, NY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo, TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Athens-Clarke County, GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Binghamton, NY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carlsbad-Artesia, NM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charleston-North Charleston, SC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crescent City, CA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Centro, CA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eufaula, AL-GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Wayne, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gulfport-Biloxi-Pascagoula, MS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harrison, AR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalamazoo-Portage, MI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawton, OK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville/Jefferson County, KY-IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Milwaukee-Waukesha-West Allis, WI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muncie, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport, OR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ogden-Clearfield, UT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prescott, AZ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richmond, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sacramento--Roseville--Arden-Arcade, CA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shreveport-Bossier City, LA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;State College, PA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trenton, NJ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester, MA-CT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abilene, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bay City, TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burlington-South Burlington, VT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Casper, WY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado Springs, CO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cookeville, TN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dillon, SC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairbanks, AK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fayetteville, NC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greeley, CO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hermiston-Pendleton, OR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hutchinson, MN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laconia, NH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Las Vegas-Henderson-Paradise, NV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Medford, OR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myrtle Beach-Conway-North Myrtle Beach, SC-NC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Castle, IN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Phoenix-Mesa-Scottsdale, AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Platteville, WI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pocatello, ID&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richmond, VA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Luis Obispo-Paso Robles-Arroyo Grande, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sumter, SC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Union City, TN-KY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Watertown-Fort Drum, NY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wilmington, OH&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Set HAPS Threshold' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
          <calculation class='tableau' formula='0.29999999999999999' />
        </column>
        <column caption='Set Lead Threshold' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.14999999999999999'>
          <calculation class='tableau' formula='0.14999999999999999' />
        </column>
        <column caption='Set NONOxNOy Threshold' datatype='real' name='[Set HAPS Threshold (copy)]' param-domain-type='any' role='measure' type='quantitative' value='53.0'>
          <calculation class='tableau' formula='53.0' />
        </column>
        <column caption='Set VOCS Threshold' datatype='real' name='[Set NONOxNOy Threshold (copy)]' param-domain-type='any' role='measure' type='quantitative' value='150.0'>
          <calculation class='tableau' formula='150.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0k5me8l1g89ptl16vfaft1pnmcma'>
        <column datatype='real' name='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' role='measure' type='quantitative' />
        <column-instance column='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' derivation='Avg' name='[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[yr:Date Local:ok]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2009' />
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2010' />
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2011' />
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2012' />
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2013' />
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2014' />
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2015' />
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2016' />
          <groupfilter function='member' level='[yr:Date Local:ok]' member='2017' />
        </groupfilter>
      </filter>
    </datasource>
    <datasource caption='cancer_incd_with_cbsa' inline='true' name='federated.0k5me8l1g89ptl16vfaft1pnmcma' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cancer_incd_with_cbsa' name='textscan.1aopspt12azzid11bbxd01u9oyav'>
            <connection class='textscan' directory='/Users/srinivvx/Desktop/w209 Dashboard' filename='cancer_incd_with_cbsa.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1aopspt12azzid11bbxd01u9oyav' name='cancer_incd_with_cbsa.csv' table='[cancer_incd_with_cbsa#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='integer' name='FIPS' ordinal='2' />
            <column datatype='string' name='Met Healthy People Objective of ***?' ordinal='3' />
            <column datatype='real' name='Age-Adjusted Incidence Rate(Ê) - cases per 100,000' ordinal='4' />
            <column datatype='real' name='Lower 95% Confidence Interval' ordinal='5' />
            <column datatype='real' name='Upper 95% Confidence Interval' ordinal='6' />
            <column datatype='integer' name='Average Annual Count' ordinal='7' />
            <column datatype='string' name='Recent Trend' ordinal='8' />
            <column datatype='real' name='Recent 5-Year Trend (ˆ) in Incidence Rates' ordinal='9' />
            <column datatype='real' name='Lower 95% Confidence Interval.1' ordinal='10' />
            <column datatype='real' name='Upper 95% Confidence Interval.1' ordinal='11' />
            <column datatype='string' name='County.1' ordinal='12' />
            <column datatype='string' name='CountyName1' ordinal='13' />
            <column datatype='string' name='CountyName' ordinal='14' />
            <column datatype='string' name='State' ordinal='15' />
            <column datatype='string' name='countyname' ordinal='16' />
            <column datatype='real' name='ssacounty' ordinal='17' />
            <column datatype='real' name='fipscounty' ordinal='18' />
            <column datatype='real' name='cbsa' ordinal='19' />
            <column datatype='string' name='cbsaname' ordinal='20' />
            <column datatype='real' name='ssast' ordinal='21' />
            <column datatype='real' name='fipst' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Met Healthy People Objective of ***?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Met Healthy People Objective of ***?]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Met Healthy People Objective of ***?</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age-Adjusted Incidence Rate(Ê) - cases per 100,000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Age-Adjusted Incidence Rate(Ê) - cases per 100,000</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lower 95% Confidence Interval</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lower 95% Confidence Interval]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Lower 95% Confidence Interval</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Upper 95% Confidence Interval</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Upper 95% Confidence Interval]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Upper 95% Confidence Interval</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Annual Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average Annual Count]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Average Annual Count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recent Trend</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Recent Trend]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Recent Trend</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recent 5-Year Trend (ˆ) in Incidence Rates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recent 5-Year Trend (ˆ) in Incidence Rates]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Recent 5-Year Trend (ˆ) in Incidence Rates</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lower 95% Confidence Interval.1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lower 95% Confidence Interval.1]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Lower 95% Confidence Interval.1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Upper 95% Confidence Interval.1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Upper 95% Confidence Interval.1]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>Upper 95% Confidence Interval.1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County.1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County.1]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>County.1</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountyName1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountyName1]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>CountyName1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountyName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountyName]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>CountyName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyname]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>countyname</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ssacounty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ssacounty]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>ssacounty</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fipscounty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fipscounty]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>fipscounty</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cbsa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cbsa]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>cbsa</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cbsaname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cbsaname]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>cbsaname</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ssast</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ssast]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>ssast</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fipst</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fipst]</local-name>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias>fipst</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cancer_incd_with_cbsa.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Cancer_Bins' datatype='integer' name='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000 (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' peg='0' size='7' />
      </column>
      <column datatype='real' name='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' role='measure' type='quantitative' />
      <column caption='Cancer Incidence Rate National Avg.' datatype='real' name='[Calculation_87960941198381076]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : AVG([Age-Adjusted Incidence Rate(Ê) - cases per 100,000]) }' />
      </column>
      <column datatype='string' name='[County.1]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[CountyName1]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Name' datatype='string' name='[CountyName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Recent Trend]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Cbsa' datatype='real' name='[cbsa]' role='measure' type='quantitative' />
      <column caption='CBSA Name' datatype='string' name='[cbsaname]' role='dimension' type='nominal' />
      <column caption='Countyname' datatype='string' name='[countyname]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Fipscounty' datatype='real' name='[fipscounty]' role='measure' type='quantitative' />
      <column caption='Fipst' datatype='real' name='[fipst]' role='measure' type='quantitative' />
      <column caption='Ssacounty' datatype='real' name='[ssacounty]' role='measure' type='quantitative' />
      <column caption='Ssast' datatype='real' name='[ssast]' role='measure' type='quantitative' />
      <column-instance column='[Recent Trend]' derivation='None' name='[none:Recent Trend:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/srinivvx/Desktop/w209 Dashboard/cancer_incd_with_cbsa.tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' value='[Extract].[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' />
            <map key='[Average Annual Count]' value='[Extract].[Average Annual Count]' />
            <map key='[County.1]' value='[Extract].[County.1]' />
            <map key='[CountyName1]' value='[Extract].[CountyName1]' />
            <map key='[CountyName]' value='[Extract].[CountyName]' />
            <map key='[County]' value='[Extract].[County]' />
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[FIPS]' value='[Extract].[FIPS]' />
            <map key='[Lower 95% Confidence Interval.1]' value='[Extract].[Lower 95% Confidence Interval.1]' />
            <map key='[Lower 95% Confidence Interval]' value='[Extract].[Lower 95% Confidence Interval]' />
            <map key='[Met Healthy People Objective of ***?]' value='[Extract].[Met Healthy People Objective of ***?]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Recent 5-Year Trend (ˆ) in Incidence Rates]' value='[Extract].[Recent 5-Year Trend (ˆ) in Incidence Rates]' />
            <map key='[Recent Trend]' value='[Extract].[Recent Trend]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Upper 95% Confidence Interval.1]' value='[Extract].[Upper 95% Confidence Interval.1]' />
            <map key='[Upper 95% Confidence Interval]' value='[Extract].[Upper 95% Confidence Interval]' />
            <map key='[cbsa]' value='[Extract].[cbsa]' />
            <map key='[cbsaname]' value='[Extract].[cbsaname]' />
            <map key='[countyname]' value='[Extract].[countyname2]' />
            <map key='[fipscounty]' value='[Extract].[fipscounty]' />
            <map key='[fipst]' value='[Extract].[fipst]' />
            <map key='[ssacounty]' value='[Extract].[ssacounty]' />
            <map key='[ssast]' value='[Extract].[ssast]' />
          </cols>
          <calculations>
            <calculation column='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000 (bin)]' formula='SYS_NUMBIN([Age-Adjusted Incidence Rate(Ê) - cases per 100,000],7)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Age-Adjusted Incidence Rate(Ê) - cases per 100,000</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age-Adjusted Incidence Rate(Ê) - cases per 100,000</remote-alias>
              <ordinal>0</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>730</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>182542.69999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>69.17116331943916</statistic>
                <statistic aggregation='Min' datatype='real'>12.9</statistic>
                <statistic aggregation='Max' datatype='real'>224.19999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>17.758121672649811</statistic>
                <statistic aggregation='StdevP' datatype='real'>17.754756798783006</statistic>
                <statistic aggregation='Var' datatype='real'>315.35088534063487</statistic>
                <statistic aggregation='VarP' datatype='real'>315.23138898393137</statistic>
                <statistic aggregation='Count' datatype='integer'>2639</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13458586.549999978</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Annual Count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Average Annual Count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Annual Count</remote-alias>
              <ordinal>1</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>366</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>212697.0</statistic>
                <statistic aggregation='Avg' datatype='real'>78.254966887417226</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>3650</statistic>
                <statistic aggregation='Stdev' datatype='real'>190.60736689215781</statistic>
                <statistic aggregation='StdevP' datatype='real'>190.57229976521361</statistic>
                <statistic aggregation='Var' datatype='real'>36331.168313561655</statistic>
                <statistic aggregation='VarP' datatype='real'>36317.801437802438</statistic>
                <statistic aggregation='Count' datatype='integer'>2718</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>115356381.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>County.1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[County.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>County.1</remote-alias>
              <ordinal>2</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1842</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abbeville&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ziebach&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3138</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CountyName1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountyName1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CountyName1</remote-alias>
              <ordinal>3</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1842</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abbeville County&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ziebach County&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3138</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CountyName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountyName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CountyName</remote-alias>
              <ordinal>4</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1842</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE COUNTY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZIEBACH COUNTY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3138</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>County</remote-name>
              <remote-type>129</remote-type>
              <local-name>[County]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>County</remote-alias>
              <ordinal>5</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3141</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abbeville County, South Carolina(6,10)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ziebach County, South Dakota(6,10)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>6</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3142</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4934511.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1570.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3141</statistic>
                <statistic aggregation='Stdev' datatype='real'>907.16159898149715</statistic>
                <statistic aggregation='StdevP' datatype='real'>907.01722695878277</statistic>
                <statistic aggregation='Var' datatype='real'>822942.16666666663</statistic>
                <statistic aggregation='VarP' datatype='real'>822680.25</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
                <statistic aggregation='Median' datatype='integer'>1571</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10334510871.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FIPS</remote-name>
              <remote-type>3</remote-type>
              <local-name>[FIPS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FIPS</remote-alias>
              <ordinal>7</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3141</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95540195.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30407.445894334818</statistic>
                <statistic aggregation='Min' datatype='integer'>1001</statistic>
                <statistic aggregation='Max' datatype='integer'>72001</statistic>
                <statistic aggregation='Stdev' datatype='real'>15170.485651982328</statistic>
                <statistic aggregation='StdevP' datatype='real'>15168.071315108285</statistic>
                <statistic aggregation='Var' datatype='real'>230143634.91700169</statistic>
                <statistic aggregation='VarP' datatype='real'>230070387.42021081</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3628014467471.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lower 95% Confidence Interval.1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lower 95% Confidence Interval.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lower 95% Confidence Interval.1</remote-alias>
              <ordinal>8</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>509</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-41157.599999999962</statistic>
                <statistic aggregation='Avg' datatype='real'>-15.414831460674144</statistic>
                <statistic aggregation='Min' datatype='real'>-73.299999999999997</statistic>
                <statistic aggregation='Max' datatype='real'>27.300000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.364392982096613</statistic>
                <statistic aggregation='StdevP' datatype='real'>12.362077335858102</statistic>
                <statistic aggregation='Var' datatype='real'>152.87821381571996</statistic>
                <statistic aggregation='VarP' datatype='real'>152.82095605773654</statistic>
                <statistic aggregation='Count' datatype='integer'>2670</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1042469.4199999981</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lower 95% Confidence Interval</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lower 95% Confidence Interval]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lower 95% Confidence Interval</remote-alias>
              <ordinal>9</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>692</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>155231.10000000009</statistic>
                <statistic aggregation='Avg' datatype='real'>57.112251655629173</statistic>
                <statistic aggregation='Min' datatype='real'>9.1999999999999993</statistic>
                <statistic aggregation='Max' datatype='real'>191.19999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.206742623002338</statistic>
                <statistic aggregation='StdevP' datatype='real'>16.203760975911887</statistic>
                <statistic aggregation='Var' datatype='real'>262.6585064482407</statistic>
                <statistic aggregation='VarP' datatype='real'>262.56186976448492</statistic>
                <statistic aggregation='Count' datatype='integer'>2718</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9579240.8100000136</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Met Healthy People Objective of ***?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Met Healthy People Objective of ***?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Met Healthy People Objective of ***?</remote-alias>
              <ordinal>10</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;_&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;&lt;font color=grey&gt;*&lt;/font&gt;&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;***&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>11</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3142.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3142.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recent 5-Year Trend (ˆ) in Incidence Rates</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Recent 5-Year Trend (ˆ) in Incidence Rates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recent 5-Year Trend (ˆ) in Incidence Rates</remote-alias>
              <ordinal>12</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>380</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-3127.5999999999995</statistic>
                <statistic aggregation='Avg' datatype='real'>-1.1713857677902619</statistic>
                <statistic aggregation='Min' datatype='real'>-30.600000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>39.600000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.8246795516447083</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.8234014020779892</statistic>
                <statistic aggregation='Var' datatype='real'>46.576250982637411</statistic>
                <statistic aggregation='VarP' datatype='real'>46.558806693879866</statistic>
                <statistic aggregation='Count' datatype='integer'>2670</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>127975.64000000007</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recent Trend</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Recent Trend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recent Trend</remote-alias>
              <ordinal>13</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;_&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;stable&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>14</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3138</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Upper 95% Confidence Interval.1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Upper 95% Confidence Interval.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Upper 95% Confidence Interval.1</remote-alias>
              <ordinal>15</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>687</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>48243.600000000144</statistic>
                <statistic aggregation='Avg' datatype='real'>18.068764044943872</statistic>
                <statistic aggregation='Min' datatype='real'>-13.5</statistic>
                <statistic aggregation='Max' datatype='real'>196.59999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>22.30492500829877</statistic>
                <statistic aggregation='StdevP' datatype='real'>22.300747664876369</statistic>
                <statistic aggregation='Var' datatype='real'>497.50967962583184</statistic>
                <statistic aggregation='VarP' datatype='real'>497.32334641248883</statistic>
                <statistic aggregation='Count' datatype='integer'>2670</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2199555.5600000019</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Upper 95% Confidence Interval</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Upper 95% Confidence Interval]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Upper 95% Confidence Interval</remote-alias>
              <ordinal>16</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>854</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>227930.29999999958</statistic>
                <statistic aggregation='Avg' datatype='real'>83.859565857247816</statistic>
                <statistic aggregation='Min' datatype='real'>17.5</statistic>
                <statistic aggregation='Max' datatype='real'>261.30000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>22.136784980610962</statistic>
                <statistic aggregation='StdevP' datatype='real'>22.132712349727338</statistic>
                <statistic aggregation='Var' datatype='real'>490.03724927780308</statistic>
                <statistic aggregation='VarP' datatype='real'>489.856955955773</statistic>
                <statistic aggregation='Count' datatype='integer'>2718</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>20445567.210000008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cbsa</remote-name>
              <remote-type>4</remote-type>
              <local-name>[cbsa]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cbsa</remote-alias>
              <ordinal>17</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>400</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>33510440.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29602.862190812721</statistic>
                <statistic aggregation='Min' datatype='real'>10180.0</statistic>
                <statistic aggregation='Max' datatype='real'>49740.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>11660.709548202991</statistic>
                <statistic aggregation='StdevP' datatype='real'>11655.55792014144</statistic>
                <statistic aggregation='Var' datatype='real'>135972147.16755241</statistic>
                <statistic aggregation='VarP' datatype='real'>135852030.42977187</statistic>
                <statistic aggregation='Count' datatype='integer'>1132</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1145789435720.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cbsaname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cbsaname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cbsaname</remote-alias>
              <ordinal>18</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>400</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abilene, TX&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yuma, AZ&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1132</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyname2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>countyname2</remote-alias>
              <ordinal>19</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1788</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABBEVILLE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZIEBACH&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3067</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fipscounty</remote-name>
              <remote-type>4</remote-type>
              <local-name>[fipscounty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fipscounty</remote-alias>
              <ordinal>20</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3067</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>93679333.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30544.288555591782</statistic>
                <statistic aggregation='Min' datatype='real'>1001.0</statistic>
                <statistic aggregation='Max' datatype='real'>72001.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>15136.571236500722</statistic>
                <statistic aggregation='StdevP' datatype='real'>15134.103384322178</statistic>
                <statistic aggregation='Var' datatype='real'>229115788.79766101</statistic>
                <statistic aggregation='VarP' datatype='real'>229041085.247352</statistic>
                <statistic aggregation='Count' datatype='integer'>3067</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3563837587301.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fipst</remote-name>
              <remote-type>4</remote-type>
              <local-name>[fipst]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fipst</remote-alias>
              <ordinal>21</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>93365.0</statistic>
                <statistic aggregation='Avg' datatype='real'>30.44179980436909</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>72.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.118151344872093</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.115686495855162</statistic>
                <statistic aggregation='Var' datatype='real'>228.55850008645788</statistic>
                <statistic aggregation='VarP' datatype='real'>228.4839782409781</statistic>
                <statistic aggregation='Count' datatype='integer'>3067</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3542959.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ssacounty</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ssacounty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ssacounty</remote-alias>
              <ordinal>22</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3068</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>86375587.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28162.891098793611</statistic>
                <statistic aggregation='Min' datatype='real'>1000.0</statistic>
                <statistic aggregation='Max' datatype='real'>53220.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>14736.780583579544</statistic>
                <statistic aggregation='StdevP' datatype='real'>14734.377912888827</statistic>
                <statistic aggregation='Var' datatype='real'>217172701.96856707</statistic>
                <statistic aggregation='VarP' datatype='real'>217101892.47982609</statistic>
                <statistic aggregation='Count' datatype='integer'>3067</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3098437754511.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ssast</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ssast]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ssast</remote-alias>
              <ordinal>23</ordinal>
              <family>cancer_incd_with_cbsa.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>85105.0</statistic>
                <statistic aggregation='Avg' datatype='real'>27.748614281056408</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>53.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>14.731043648371285</statistic>
                <statistic aggregation='StdevP' datatype='real'>14.728641913025028</statistic>
                <statistic aggregation='Var' datatype='real'>217.00364697021999</statistic>
                <statistic aggregation='VarP' datatype='real'>216.93289260211753</statistic>
                <statistic aggregation='Count' datatype='integer'>3067</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3026879.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.420183' measure-ordering='alphabetic' measure-percentage='0.433028' parameter-percentage='0.146789' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Recent Trend:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;falling&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;stable&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;_&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;__&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rising&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='cbsa_census_populations' inline='true' name='federated.1x2wyc40gr02ww1ez2rh20jcatyo' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cbsa_census_populations' name='textscan.01cwq8212umku61741f3u11wkdrs'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='/Users/srinivvx/Desktop/w209 Dashboard/w209_Group_Project-master/Data/EPA AQI - Daily - City/cbsa_census_populations.csv' dataRefreshTime='' directory='/Users/srinivvx/Desktop/w209 Dashboard/w209_Group_Project-master/Data/EPA AQI - Daily - City' filename='/var/folders/jg/mmdt9q4531q5mzcprt1c14c45ykjq9/T/tableau-temp/1s9e0zc0kkw62111sqxqf0zsd4d6/cbsa_census_populations.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.01cwq8212umku61741f3u11wkdrs' name='cbsa_census_populations.csv' table='[cbsa_census_populations#csv$]' type='table'>
          <columns character-set='ISO_8859-2:1987' gridOrigin='A1:D3636:no:A1:D3636:2' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='CBSA' ordinal='0' />
            <column datatype='string' name='CBSA Geography CBSA Geography' ordinal='1' />
            <column datatype='integer' name='Population Estimate' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CBSA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CBSA]</local-name>
            <parent-name>[cbsa_census_populations.csv]</parent-name>
            <remote-alias>CBSA</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CBSA Geography</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CBSA Geography]</local-name>
            <parent-name>[cbsa_census_populations.csv]</parent-name>
            <remote-alias>CBSA Geography</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Estimate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Estimate]</local-name>
            <parent-name>[cbsa_census_populations.csv]</parent-name>
            <remote-alias>Population Estimate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[cbsa_census_populations.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cbsa_census_populations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D3635:no:A1:D3635:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>10900</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cbsa' datatype='integer' name='[CBSA]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/srinivvx/Desktop/w209 Dashboard/w209_Group_Project-master/Data/EPA AQI - Daily - City/cbsa_census_populations.tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CBSA Geography</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CBSA Geography]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CBSA Geography</remote-alias>
              <ordinal>0</ordinal>
              <family>cbsa_census_populations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1388</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;.Bethesda-Frederick-Gaithersburg, MD&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zanesville, OH&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3634</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CBSA</remote-name>
              <remote-type>3</remote-type>
              <local-name>[CBSA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CBSA</remote-alias>
              <ordinal>1</ordinal>
              <family>cbsa_census_populations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>942</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>107649266.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29639.115088105726</statistic>
                <statistic aggregation='Min' datatype='integer'>72</statistic>
                <statistic aggregation='Max' datatype='integer'>49780</statistic>
                <statistic aggregation='Stdev' datatype='real'>11446.337059097752</statistic>
                <statistic aggregation='StdevP' datatype='real'>11444.761188358667</statistic>
                <statistic aggregation='Var' datatype='real'>131018632.07047457</statistic>
                <statistic aggregation='VarP' datatype='real'>130982558.6585609</statistic>
                <statistic aggregation='Count' datatype='integer'>3632</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3666357637172.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3634.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3634</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3634.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population Estimate</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Population Estimate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population Estimate</remote-alias>
              <ordinal>3</ordinal>
              <family>cbsa_census_populations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3622</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2794022941.0</statistic>
                <statistic aggregation='Avg' datatype='real'>768856.06521739135</statistic>
                <statistic aggregation='Min' datatype='integer'>12463</statistic>
                <statistic aggregation='Max' datatype='integer'>321418820</statistic>
                <statistic aggregation='Stdev' datatype='real'>7159166.2092655692</statistic>
                <statistic aggregation='StdevP' datatype='real'>7158181.1158712581</statistic>
                <statistic aggregation='Var' datatype='real'>51253660811889.938</statistic>
                <statistic aggregation='VarP' datatype='real'>51239556887615.891</statistic>
                <statistic aggregation='Count' datatype='integer'>3634</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.8835275121414054e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>cbsa_census_populations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7289471.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2005.9083654375345</statistic>
                <statistic aggregation='Min' datatype='integer'>1990</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.378661832807445</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.37723374035723</statistic>
                <statistic aggregation='Var' datatype='real'>107.716621439774</statistic>
                <statistic aggregation='VarP' datatype='real'>107.68698010200852</statistic>
                <statistic aggregation='Count' datatype='integer'>3634</statistic>
                <statistic aggregation='Median' datatype='integer'>2012</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>14622402193.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.282569' measure-ordering='alphabetic' measure-percentage='0.319266' parameter-percentage='0.398165' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0k5me8l1g89ptl16vfaft1pnmcma'>
      <column caption='County Name' datatype='string' name='[CountyName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='CBSA Name' datatype='string' name='[cbsaname]' role='dimension' type='nominal' />
      <column-instance column='[CountyName]' derivation='None' name='[none:CountyName:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[cbsaname]' derivation='None' name='[none:cbsaname:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
      <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
      <column datatype='string' name='[County Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[County Name]' derivation='None' name='[none:County Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1x2wyc40gr02ww1ez2rh20jcatyo'>
      <column datatype='string' name='[CBSA Geography]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[CBSA Geography]' derivation='None' name='[none:CBSA Geography:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0uqcz4d0sf9otk15ew9eh1px81ob' target='federated.0k5me8l1g89ptl16vfaft1pnmcma'>
      <column-mapping>
        <map key='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:cbsaname:nk]' />
        <map key='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:County Name:nk]' value='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:CountyName:nk]' />
        <map key='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:State Name:nk]' value='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:State:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.0uqcz4d0sf9otk15ew9eh1px81ob' target='federated.1x2wyc40gr02ww1ez2rh20jcatyo'>
      <column-mapping>
        <map key='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='[federated.1x2wyc40gr02ww1ez2rh20jcatyo].[none:CBSA Geography:nk]' />
        <map key='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='[federated.1x2wyc40gr02ww1ez2rh20jcatyo].[none:Year:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cancer Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b07aa1' fontsize='9' underline='true'>Lung Cancer Incidence Rates (per 100000 cases)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cancer_incd_with_cbsa' name='federated.0k5me8l1g89ptl16vfaft1pnmcma' />
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0k5me8l1g89ptl16vfaft1pnmcma'>
            <column datatype='real' name='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' role='measure' type='quantitative' />
            <column datatype='string' name='[CountyName1]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Recent Trend]' role='dimension' type='nominal' />
            <column-instance column='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' derivation='Avg' name='[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' pivot='key' type='quantitative' />
            <column caption='CBSA Name' datatype='string' name='[cbsaname]' role='dimension' type='nominal' />
            <column-instance column='[CountyName1]' derivation='None' name='[none:CountyName1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Recent Trend]' derivation='None' name='[none:Recent Trend:nk]' pivot='key' type='nominal' />
            <column-instance column='[cbsaname]' derivation='None' name='[none:cbsaname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:cbsaname:nk]' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[Longitude (generated)]' field-type='quantitative' max='-5670129.660685271' min='-14536179.201750763' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[Latitude (generated)]' field-type='quantitative' max='7565759.6050661067' min='1668079.0733441245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:Recent Trend:nk]' />
              <size column='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' />
              <lod column='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:CountyName1:nk]' />
              <lod column='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:cbsaname:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5798985958099365' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0k5me8l1g89ptl16vfaft1pnmcma].[Latitude (generated)]</rows>
        <cols>[federated.0k5me8l1g89ptl16vfaft1pnmcma].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='HAPS Seasonal '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='2' fontcolor='#18265d' fontsize='10' underline='true'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Set HAPS Threshold' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
              <calculation class='tableau' formula='0.29999999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[1st Max Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='HAPS Monthly National Average' datatype='real' name='[HAPS National Average (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), MONTH([Date Local]),[TOXIC_CAT]=&apos;HAPS&apos;: AVG([1st Max Value]) }' />
            </column>
            <column caption='HAPS_Max_Standard_Check' datatype='string' name='[HAPS_Standard_Check (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([1st Max Value]) &gt; [Parameters].[Parameter 3] THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
            </column>
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[1st Max Value]' derivation='Avg' name='[avg:1st Max Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HAPS National Average (copy)]' derivation='Avg' name='[avg:HAPS National Average (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Local]' derivation='Month' name='[mn:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[HAPS_Standard_Check (copy)]' derivation='User' name='[usr:HAPS_Standard_Check (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;HAPS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='72' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='196' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Standard_Check (copy):nk]' value='USER THRESHOLD'>
              <formatted-text>
                <run>USER THRESHOLD</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Standard_Check (copy):nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:1st Max Value:qk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:HAPS National Average (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Date Local:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>CBSA Name:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date Local:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. 1st Max Value:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:1st Max Value:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. HAPS Monthly National Average:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:HAPS National Average (copy):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>HAPS_Max_Standard_Check:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Standard_Check (copy):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>*</run>
                <run fontcolor='#666666' fontsize='9'>EPA does </run>
                <run bold='true' fontcolor='#666666' fontsize='9'>not have defined aggregate level</run>
                <run fontcolor='#666666' fontsize='9'> threshold for Nitric Oxide (NONOxNOy), HAPS and VOCS pollutants. Thresholds are only set at each sub category of pollutants within these each of these groups..</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</cols>
        <pages>
          <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='HAPS Timelapse'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b07aa1' fontsize='9' underline='true'>HAPS (in Microgram/Cubic Metre) Timelapse</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column caption='HAPS National Average' datatype='real' name='[Calculation_87960941170864144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;HAPS&apos;: AVG([Arithmetic Mean]) }' />
            </column>
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='HAPS_Standard_Check' datatype='string' name='[Lead_Standard_Check (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([Arithmetic Mean]) &gt; 0.60 THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
            </column>
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_87960941170864144]' derivation='Avg' name='[avg:Calculation_87960941170864144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year-Trunc' name='[tyr:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Lead_Standard_Check (copy)]' derivation='User' name='[usr:Lead_Standard_Check (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;HAPS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[Longitude (generated)]' field-type='quantitative' max='-8346108.8077155827' min='-14158093.271784285' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[Latitude (generated)]' field-type='quantitative' max='7181728.4082179368' min='2511383.7495913026' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' value='#ffffff' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#f5f5f5' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='total' value='#ffffff' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='-90' />
            <format attr='text-orientation' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[tyr:Date Local:ok]' value='-90' />
            <format attr='text-format' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.59999999999999998' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' max='2.0' min='0.0' num-steps='2' reverse='true' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#e1c613</color>
                <color>#dfc93b</color>
                <color>#ddcd63</color>
                <color>#dcd18b</color>
                <color>#dad5b2</color>
                <color>#d9d9d9</color>
                <color>#dcddde</color>
                <color>#dfe1e3</color>
                <color>#e2e5e8</color>
                <color>#e5e9ed</color>
                <color>#e9edf3</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Lead_Standard_Check (copy):nk]' field-type='nominal' max-size='1' min-size='0.586551' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='true' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-orange-blue-dark' />
            <format attr='geo-area-type' value='County' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' />
              <size column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Lead_Standard_Check (copy):nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2948571443557739' />
                <format attr='has-stroke' value='true' />
                <format attr='has-halo' value='false' />
                <format attr='mark-transparency' value='214' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[Latitude (generated)]</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[tyr:Date Local:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='HAPS Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#472112' fontsize='9' underline='true'>HAPS (in Microgram/Cubic Metre) Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column caption='HAPS National Average' datatype='real' name='[Calculation_87960941170864144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;HAPS&apos;: AVG([Arithmetic Mean]) }' />
            </column>
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_87960941170864144]' derivation='Avg' name='[avg:Calculation_87960941170864144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;HAPS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]'>
            <groupfilter from='2000' function='range' level='[yr:Date Local:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk]' field-type='quantitative' fold='true' major-show='false' minor-show='false' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='60' />
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk]' value='60' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' value='#ffffff' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#f5f5f5' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='65' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='-90' />
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='#472112' />
            <format attr='font-size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='10' />
            <format attr='font-weight' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='bold' />
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='#472112' />
            <format attr='font-weight' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='bold' />
            <format attr='font-size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' field-type='nominal' max-size='1' min-size='0.491821' type='catsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
              <size column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk] + [federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941170864144:qk])</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Lead Seasonal '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#18265d' fontsize='10' underline='true'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Set Lead Threshold' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='0.14999999999999999'>
              <calculation class='tableau' formula='0.14999999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[1st Max Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='Lead Monthly National Average' datatype='real' name='[Lead National Average (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]),([Date Local]), [TOXIC_CAT]=&apos;Lead&apos;: AVG([1st Max Value]) }' />
            </column>
            <column caption='Lead_Max_Standard_Check' datatype='string' name='[Lead_Standard_Check (copy 2)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([1st Max Value]) &gt; [Parameters].[Parameter 4] THEN &quot;ABOVE EPA THRESHOLD&quot;&#10;ELSE &quot;BELOW EPA THRESHOLD&quot;&#10;END' />
            </column>
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[1st Max Value]' derivation='Avg' name='[avg:1st Max Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lead National Average (copy)]' derivation='Avg' name='[avg:Lead National Average (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Local]' derivation='Month' name='[mn:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lead_Standard_Check (copy 2)]' derivation='User' name='[usr:Lead_Standard_Check (copy 2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;Lead&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='196' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='7' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Lead_Standard_Check (copy 2):nk]' value='' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='Select 2 or 3 Cities'>
              <formatted-text>
                <run>Select 2 or 3 Cities</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Select Year'>
              <formatted-text>
                <run>Select Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Lead_Standard_Check (copy 2):nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:1st Max Value:qk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Lead National Average (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Date Local:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>CBSA Name:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date Local:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. 1st Max Value:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:1st Max Value:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Lead Monthly National Average:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Lead National Average (copy):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Lead_Max_Standard_Check:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Lead_Standard_Check (copy 2):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='9'>*For Lead, Environment Protection Agency (EPA) Threshold is 0.15 Microgram/Cubic Metre. EPA does </run>
                <run bold='true' fontcolor='#666666' fontsize='9'>not have defined aggregate level</run>
                <run fontcolor='#666666' fontsize='9'> threshold for Nitric Oxide (NONOxNOy), HAPS and VOCS pollutants. Thresholds are only set at each sub category of pollutants within these each of these groups.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</cols>
        <pages>
          <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='Lead Timelapse'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b07aa1' fontsize='9' underline='true'>Lead (in Microgram/Cubic Metre) Timelapse</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column caption='Lead National Average' datatype='real' name='[Calculation_87960941164285967]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;Lead&apos;: AVG([Arithmetic Mean]) }' />
            </column>
            <column caption='Lead_Standard_Check' datatype='string' name='[Calculation_87960941412773909]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([Arithmetic Mean]) &gt; 0.15 THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
            </column>
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_87960941164285967]' derivation='Avg' name='[avg:Calculation_87960941164285967:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year-Trunc' name='[tyr:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_87960941412773909]' derivation='User' name='[usr:Calculation_87960941412773909:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;Lead&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[Longitude (generated)]' field-type='quantitative' max='-7552852.5719225667' min='-15190288.78711326' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[Latitude (generated)]' field-type='quantitative' max='8006824.6773333857' min='2012268.4674589997' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' value='#ffffff' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#f5f5f5' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='total' value='#ffffff' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='-90' />
            <format attr='text-orientation' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[tyr:Date Local:ok]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.59999999999999998' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' num-steps='4' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Calculation_87960941412773909:nk]' field-type='nominal' max-size='1' min-size='0.454897' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='true' />
            <format attr='enabled' id='181657' value='true' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-orange-blue-light' />
            <format attr='geo-area-type' value='County' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' />
              <size column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Calculation_87960941412773909:nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6696071624755859' />
                <format attr='mark-transparency' value='188' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[Latitude (generated)]</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[tyr:Date Local:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Lead Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#472112' fontsize='9' underline='true'>Lead (in Microgram/Cubic Metre) Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column caption='Lead National Average' datatype='real' name='[Calculation_87960941164285967]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;Lead&apos;: AVG([Arithmetic Mean]) }' />
            </column>
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_87960941164285967]' derivation='Avg' name='[avg:Calculation_87960941164285967:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;Lead&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]'>
            <groupfilter from='2000' function='range' level='[yr:Date Local:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk]' field-type='quantitative' fold='true' major-show='false' minor-show='false' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='60' />
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk]' value='60' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' value='#ffffff' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#f5f5f5' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dashed' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='66' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='-90' />
            <format attr='font-size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='10' />
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='#472112' />
            <format attr='font-weight' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='bold' />
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='#472112' />
            <format attr='font-size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='10' />
            <format attr='font-weight' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' field-type='nominal' max-size='1' min-size='0.545357' type='catsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
              <size column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk] + [federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941164285967:qk])</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='NONOxNOy Seasonal'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#18265d' fontsize='10' underline='true'>&lt;Sheet Name&gt;</run>
            <run bold='true' fontcolor='#18265d' underline='true'> - </run>
            <run bold='true' fontcolor='#18265d' fontsize='10' underline='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Set NONOxNOy Threshold' datatype='real' name='[Set HAPS Threshold (copy)]' param-domain-type='any' role='measure' type='quantitative' value='53.0'>
              <calculation class='tableau' formula='53.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[1st Max Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='NONOxNOy_Max_Standard_Check' datatype='string' name='[HAPS_Max_Standard_Check (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([1st Max Value]) &gt; [Parameters].[Set HAPS Threshold (copy)] THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
            </column>
            <column caption='NONOxNOy Monthly National Average' datatype='real' name='[NONOxNOy National Average (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), MONTH([Date Local]), [TOXIC_CAT]=&apos;NONOxNOy&apos;: AVG([1st Max Value]) }' />
            </column>
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NONOxNOy National Average (copy)]' derivation='Avg' name='[avg:NONOxNOy National Average (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Local]' derivation='Month' name='[mn:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[HAPS_Max_Standard_Check (copy)]' derivation='User' name='[usr:HAPS_Max_Standard_Check (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;NONOxNOy&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='119' />
            <format attr='height' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='196' />
            <format attr='height' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='37' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Max_Standard_Check (copy):nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:NONOxNOy National Average (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Date Local:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>CBSA Name:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date Local:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Arithmetic Mean:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. NONOxNOy Monthly National Average:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:NONOxNOy National Average (copy):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>NONOxNOy_Max_Standard_Check:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Max_Standard_Check (copy):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>*</run>
                <run fontcolor='#666666' fontsize='9'>EPA does </run>
                <run bold='true' fontcolor='#666666' fontsize='9'>not have defined aggregate level</run>
                <run fontcolor='#666666' fontsize='9'> threshold for Nitric Oxide (NONOxNOy), HAPS and VOCS pollutants. Thresholds are only set at each sub category of pollutants within these each of these groups.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</cols>
        <pages>
          <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='NONOxNOy Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#472112' fontsize='9' underline='true'>NONOxNOy (in ppb) Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column caption='NONOxNOy National Average' datatype='real' name='[Calculation_87960941175255058]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;NONOxNOy&apos;: AVG([Arithmetic Mean]) }' />
            </column>
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_87960941175255058]' derivation='Avg' name='[avg:Calculation_87960941175255058:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;HAPS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]'>
            <groupfilter from='2000' function='range' level='[yr:Date Local:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941175255058:qk]' field-type='quantitative' fold='true' major-show='false' minor-show='false' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941175255058:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941175255058:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941175255058:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='48' />
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941175255058:qk]' value='48' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' value='#ffffff' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#f5f5f5' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='65' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='-90' />
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='#472112' />
            <format attr='font-weight' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='bold' />
            <format attr='font-size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='10' />
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='#472112' />
            <format attr='font-size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='10' />
            <format attr='font-weight' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' field-type='nominal' max-size='1' min-size='0.652429' type='catsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941175255058:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
              <size column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk] + [federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941175255058:qk])</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='National Avg'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cancer_incd_with_cbsa' name='federated.0k5me8l1g89ptl16vfaft1pnmcma' />
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5me8l1g89ptl16vfaft1pnmcma'>
            <column datatype='real' name='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' role='measure' type='quantitative' />
            <column caption='Cancer Incidence Rate National Avg.' datatype='real' name='[Calculation_87960941198381076]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED : AVG([Age-Adjusted Incidence Rate(Ê) - cases per 100,000]) }' />
            </column>
            <column-instance column='[Age-Adjusted Incidence Rate(Ê) - cases per 100,000]' derivation='Avg' name='[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' pivot='key' type='quantitative' />
            <column caption='CBSA Name' datatype='string' name='[cbsaname]' role='dimension' type='nominal' />
            <column-instance column='[cbsaname]' derivation='None' name='[none:cbsaname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_87960941198381076]' derivation='Sum' name='[sum:Calculation_87960941198381076:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:cbsaname:nk]' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' value='14' />
            <format attr='color' field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' value='#4e79a7' />
            <format attr='text-align' field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' value='center' />
            <format attr='vertical-align' field='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' value='center' />
            <format attr='border-color' scope='rows' value='#f28e2b' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-width' scope='rows' value='2' />
            <format attr='border-color' scope='cols' value='#f28e2b' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-width' scope='cols' value='2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='subtotal' scope='cols' value='#f28e2b' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='2' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' />
              <text column='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[sum:Calculation_87960941198381076:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Toxic Concentration by Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#472112' fontsize='9' underline='true'>Toxic Concentrations By Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' included-values='in-range'>
            <min>1980</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='113' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='Select 2 or 3 Cities'>
              <formatted-text>
                <run>Select 2 or 3 Cities</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-transparency' value='183' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]</rows>
        <cols>([federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk] / [federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='VOCS Seasonal'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='2' fontcolor='#18265d' fontsize='10' underline='true'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Set VOCS Threshold' datatype='real' name='[Set NONOxNOy Threshold (copy)]' param-domain-type='any' role='measure' type='quantitative' value='150.0'>
              <calculation class='tableau' formula='150.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[1st Max Value]' role='measure' type='quantitative' />
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='VOCS_Max_Standard_Check' datatype='string' name='[NONOxNOy_Max_Standard_Check (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([1st Max Value]) &gt; [Parameters].[Set NONOxNOy Threshold (copy)] THEN &quot;ABOVE&quot;&#10;ELSE &quot;BELOW&quot;&#10;END' />
            </column>
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column caption='VOCS Monthly National Average ' datatype='real' name='[VOCS National Average (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), MONTH([Date Local]), [TOXIC_CAT]=&apos;VOCS&apos;: AVG([1st Max Value]) }' />
            </column>
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOCS National Average (copy)]' derivation='Avg' name='[avg:VOCS National Average (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date Local]' derivation='Month' name='[mn:Date Local:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[NONOxNOy_Max_Standard_Check (copy)]' derivation='User' name='[usr:NONOxNOy_Max_Standard_Check (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;VOCS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='89' />
            <format attr='height' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='196' />
            <format attr='height' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:NONOxNOy_Max_Standard_Check (copy):nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:VOCS National Average (copy):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Date Local:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>CBSA Name:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date Local:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Arithmetic Mean:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. VOCS Monthly National Average :&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:VOCS National Average (copy):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>VOCS_Max_Standard_Check:&#9;</run>
                <run bold='true'>&lt;[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:NONOxNOy_Max_Standard_Check (copy):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>*</run>
                <run fontcolor='#666666' fontsize='9'>EPA does </run>
                <run bold='true' fontcolor='#666666' fontsize='9'>not have defined aggregate level</run>
                <run fontcolor='#666666' fontsize='9'> threshold for Nitric Oxide (NONOxNOy), HAPS and VOCS pollutants. Thresholds are only set at each sub category of pollutants within these each of these groups.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[mn:Date Local:ok]</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</cols>
        <pages>
          <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
    </worksheet>
    <worksheet name='VOCS Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#472112' fontsize='9' underline='true'>VOCS (in ppb carbon) Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
          </datasources>
          <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
            <column datatype='real' name='[Arithmetic Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
            <column caption='VOCS National Average' datatype='real' name='[Calculation_87960941173313553]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED YEAR([Date Local]), [TOXIC_CAT]=&apos;VOCS&apos;: AVG([Arithmetic Mean]) }' />
            </column>
            <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
            <column caption='Toxic Cat' datatype='string' name='[TOXIC_CAT]' role='dimension' type='nominal' />
            <column-instance column='[Arithmetic Mean]' derivation='Avg' name='[avg:Arithmetic Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_87960941173313553]' derivation='Avg' name='[avg:Calculation_87960941173313553:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOXIC_CAT]' derivation='None' name='[none:TOXIC_CAT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Abilene, TX&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Albuquerque, NM&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Asheville, NC&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Carbondale-Marion, IL&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Detroit-Warren-Dearborn, MI&quot;' />
              <groupfilter function='member' level='[none:CBSA Name:nk]' member='&quot;Indianapolis-Carmel-Anderson, IN&quot;' />
            </groupfilter>
            <target field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]'>
            <groupfilter function='member' level='[none:TOXIC_CAT:nk]' member='&quot;VOCS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]'>
            <groupfilter from='2000' function='range' level='[yr:Date Local:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</column>
            <column>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941173313553:qk]' field-type='quantitative' fold='true' major-show='false' minor-show='false' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941173313553:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941173313553:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941173313553:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='24' />
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941173313553:qk]' value='24' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-color' value='#ffffff' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#f5f5f5' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='-90' />
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='#472112' />
            <format attr='font-size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='10' />
            <format attr='font-weight' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]' value='bold' />
            <format attr='color' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='#472112' />
            <format attr='font-weight' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='bold' />
            <format attr='font-size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' field-type='nominal' max-size='1' min-size='0.491821' type='catsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' />
              <lod column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941173313553:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
              <size column='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk] + [federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Calculation_87960941173313553:qk])</rows>
        <cols>[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Cancer Charts'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
      </datasources>
      <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
        <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
        <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='18' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' param='horz' type='layout-flow' w='89300' x='800' y='1000'>
              <zone h='98000' id='3' type='layout-basic' w='89300' x='800' y='1000'>
                <zone h='49000' id='9' name='Lead Trends' w='26334' x='63766' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='13' name='HAPS Trends' w='31219' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='14' name='NONOxNOy Trends' w='32881' x='32019' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='15' name='VOCS Trends' w='25200' x='64900' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='6' name='HAPS Trends' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' type='filter' w='16700' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='42875' id='16' name='Cancer Trends' w='46266' x='17500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6125' id='21' name='National Avg' w='46266' x='17500' y='43875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='91' h='98000' id='17' is-fixed='true' param='vert' type='layout-flow' w='9100' x='90100' y='1000'>
              <zone fixed-size='157' h='20625' id='19' is-fixed='true' name='Cancer Trends' pane-specification-id='0' param='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:Recent Trend:nk]' type='color' w='9100' x='90100' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='20' name='Cancer Trends' pane-specification-id='0' param='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' type='size' w='9100' x='90100' y='21625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='22' name='National Avg' pane-specification-id='0' param='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' type='color' w='9100' x='90100' y='34875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='3750' id='23' type='text' w='23100' x='24800' y='45000'>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' underline='true'>Lung Cancer Incidence National Average</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='HAPS TimeLapse'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
      </datasources>
      <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
        <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
        <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='88500' id='1' name='HAPS Timelapse' w='84100' x='1100' y='2500' />
        <zone h='8250' id='2' name='HAPS Timelapse' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' values='relevant' w='16000' x='85100' y='6000' />
        <zone h='11500' id='3' name='HAPS Timelapse' pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' type='color' w='14000' x='85900' y='42250' />
        <zone h='12125' id='4' name='HAPS Timelapse' pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Lead_Standard_Check (copy):nk]' type='size' w='14000' x='86100' y='31250' />
        <zone h='13375' id='5' name='HAPS Timelapse' synchronized='1' type='currpage' w='15500' x='85300' y='15750' />
      </zones>
    </dashboard>
    <dashboard name='Lead TimeLapse'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
      </datasources>
      <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
        <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
        <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='84375' id='1' name='Lead Timelapse' w='83000' x='1800' y='1250' />
        <zone h='8250' id='2' name='Lead Timelapse' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' values='relevant' w='16000' x='84000' y='750' />
        <zone h='11500' id='3' name='Lead Timelapse' pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' type='color' w='14000' x='85000' y='10375' />
        <zone h='8625' id='4' name='Lead Timelapse' pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Calculation_87960941412773909:nk]' type='size' w='14000' x='85200' y='20625' />
        <zone h='15125' id='5' name='Lead Timelapse' pane-specification-id='0' type='map' w='15500' x='84700' y='47500' />
        <zone h='13375' id='6' name='Lead Timelapse' synchronized='1' type='currpage' w='16000' x='84100' y='30375' />
      </zones>
    </dashboard>
    <dashboard name='Seasonality Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
      </datasources>
      <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
        <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
        <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='23' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='9' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='7' type='layout-basic' w='98400' x='800' y='1000' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='45000' id='27' name='HAPS Seasonal ' w='47900' x='43200' y='750' />
        <zone h='5500' id='13' mode='type_in' param='[Parameters].[Parameter 3]' type='paramctrl' w='16000' x='36200' y='94875' />
        <zone h='5500' id='17' mode='type_in' param='[Parameters].[Set HAPS Threshold (copy)]' type='paramctrl' w='16000' x='52800' y='89125' />
        <zone h='5500' id='21' mode='type_in' param='[Parameters].[Set NONOxNOy Threshold (copy)]' type='paramctrl' w='16000' x='52700' y='94875' />
        <zone h='46125' id='24' name='Lead Seasonal ' w='45100' x='300' y='750' />
        <zone count='3' h='12750' id='26' name='Lead Seasonal ' name1='HAPS Seasonal ' name2='NONOxNOy Seasonal' name3='VOCS Seasonal' synchronized='1' type='currpage' w='33500' x='500' y='88375' />
        <zone h='44500' id='28' name='NONOxNOy Seasonal' w='45400' x='300' y='43250' />
        <zone h='47375' id='29' name='VOCS Seasonal' w='41500' x='43600' y='44375' />
        <zone h='5500' id='30' mode='type_in' param='[Parameters].[Parameter 4]' type='paramctrl' w='16000' x='36200' y='89250' />
        <zone h='517875' id='31' mode='checkdropdown' name='Lead Seasonal ' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' type='filter' w='16000' x='83300' y='1750' />
        <zone h='7250' id='32' name='HAPS Seasonal ' pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Standard_Check (copy):nk]' type='color' w='14000' x='83700' y='9500' />
        <zone forceUpdate='true' h='4250' id='33' type='text' w='32400' x='36100' y='86500'>
          <formatted-text>
            <run bold='true' underline='true'>Set Thresholds (Refer tool tip for more details)</run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3125' id='34' type='text' w='41800' x='20000' y='625'>
          <formatted-text>
            <run bold='true' fontcolor='#18265d' fontname='Tamil MN' fontsize='14'>Seasonal Effects of Air Toxicity - City Level</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Toxics Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Toxics_All_Consolidated (2)' name='federated.0uqcz4d0sf9otk15ew9eh1px81ob' />
      </datasources>
      <datasource-dependencies datasource='federated.0uqcz4d0sf9otk15ew9eh1px81ob'>
        <column datatype='string' name='[CBSA Name]' role='dimension' semantic-role='[CMSA].[Name]' type='nominal' />
        <column datatype='date' name='[Date Local]' role='dimension' type='ordinal' />
        <column-instance column='[CBSA Name]' derivation='None' name='[none:CBSA Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date Local]' derivation='Year' name='[yr:Date Local:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='41000' id='1' name='Toxic Concentration by Category' w='50275' x='19907' y='5000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Lead Trends' w='29018' x='70182' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='HAPS Trends' w='34100' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='14' name='NONOxNOy Trends' w='31700' x='34900' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='15' name='VOCS Trends' w='32600' x='66600' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4000' id='7' name='Toxic Concentration by Category' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='69382' x='800' y='46000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45000' id='6' name='Toxic Concentration by Category' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' type='filter' w='19107' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4000' id='16' type='text' w='50275' x='19907' y='1000'>
                <formatted-text>
                  <run bold='true' fontcolor='#472112' fontsize='14'>Toxics Concentration for Cities vs. National Average</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Toxic Concentration by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:TOXIC_CAT:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Lead Timelapse' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='213'>
            <card param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Calculation_87960941412773909:nk]' type='size' />
            <card type='currpage' />
            <card pane-specification-id='0' type='map' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2017-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <map-scale-visibility value='0' />
      </viewpoint>
    </window>
    <window class='worksheet' name='HAPS Timelapse' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='213'>
            <card param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[yr:Date Local:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[avg:Arithmetic Mean:qk]' type='color' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Lead_Standard_Check (copy):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2015-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <map-scale-visibility value='0' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Lead Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='HAPS Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' type='color' />
            <card pane-specification-id='4' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' type='color' />
            <card pane-specification-id='4' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='NONOxNOy Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' type='color' />
            <card pane-specification-id='5' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' type='color' />
            <card pane-specification-id='5' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='VOCS Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[none:CBSA Name:nk]' type='color' />
            <card pane-specification-id='7' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' type='color' />
            <card pane-specification-id='7' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Toxics Dashboard'>
      <viewpoints>
        <viewpoint name='HAPS Trends'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Lead Trends'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NONOxNOy Trends'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Toxic Concentration by Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='VOCS Trends'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Cancer Charts'>
      <viewpoints>
        <viewpoint name='Cancer Trends'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='HAPS Trends'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Lead Trends'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NONOxNOy Trends'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='National Avg' />
        <viewpoint name='VOCS Trends'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='worksheet' name='Cancer Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[none:Recent Trend:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='National Avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5me8l1g89ptl16vfaft1pnmcma].[avg:Age-Adjusted Incidence Rate(Ê) - cases per 100,000:qk]</field>
                  <field>[federated.0k5me8l1g89ptl16vfaft1pnmcma].[sum:Calculation_87960941198381076:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>64.889473684210529</value>
                <value>69.171163319439231</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='dashboard' name='HAPS TimeLapse'>
      <viewpoints>
        <viewpoint name='HAPS Timelapse'>
          <current-page>
            <multibucket>
              <bucket>#2017-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Lead Seasonal '>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='178'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:Lead_Standard_Check (copy 2):nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1980</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window class='worksheet' name='HAPS Seasonal '>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='192'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Standard_Check (copy):nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1980</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window class='worksheet' name='NONOxNOy Seasonal'>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='121'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Max_Standard_Check (copy):nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Set HAPS Threshold (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1980</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window class='worksheet' name='VOCS Seasonal'>
      <cards>
        <edge name='left'>
          <strip size='234'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='121'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:NONOxNOy_Max_Standard_Check (copy):nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Set NONOxNOy Threshold (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1980</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window class='dashboard' name='Seasonality Dashboard'>
      <viewpoints>
        <viewpoint name='HAPS Seasonal '>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
          <highlight field='[federated.0uqcz4d0sf9otk15ew9eh1px81ob].[usr:HAPS_Standard_Check (copy):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Lead Seasonal '>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='NONOxNOy Seasonal'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='VOCS Seasonal'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Lead TimeLapse'>
      <viewpoints>
        <viewpoint name='Lead Timelapse'>
          <current-page>
            <multibucket>
              <bucket>#2017-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cancer Charts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cancer Trends' width='192'>
      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
      9w7OaQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='HAPS Seasonal ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HAPS TimeLapse' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='HAPS Timelapse' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HAPS Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Lead Seasonal ' width='192'>
      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
      qrIZn7HOGr0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Lead TimeLapse' width='192'>
      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
      40Lj/wMg7bizMJNEHAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Lead Timelapse' width='192'>
      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
      xGhNGsh3VP1xpWlKHMfVOUB+G3UpbK2lMJpABWirb437i0CTOVNnvnofxhiuri7p9fv85Kc/
      JWmV70eb786/egzgDjIFKiZwcWj/hQ7+oleLZKEV3j4Nokli+RKyyXau3+v35V8LpCKMWmtJ
      fa6d+hg2XXPSsklL+WP0P+v31E04B/VYe31edSaqQx137kXb7XZ5sp+f5lInOoefRZau1VVs
      Y4C61mnChT9HP6y7aewAe/v7jEYjnjx5ggCm07Im/SvFAC7S4IjJGMNoNKp+r2+M1aF+xqQP
      TYS+7Z6mGH1Tv+EqTSAMAxbLJeHKBq6Dz3CbinJcX014qTPBNtjU7iaHdxNhNjmUcKMF2u12
      tQfg9zOfz1kulzf9YZFsH/O2sdfHXB/3NnDz3hkO2V2dLGKtrSrZvnI+gP/uWodYF292Ktc3
      T+oS25dkTXasu8f/rOeV1G1+H9zvriDH7UwrqRBKUOiikVn8cdZ9gfohWP48/DE0EUH9/vqz
      Te05U6/J33H3bjMD/T2GaPUKXCFEdRKdyyat+mBd8NTBH9td5mB9fC4i5K9dHXdN5pz7/pXS
      AA7ce2ldWWWTqnZ/u9Ol60TvPrMiLyu1PClab3NTkUeTbQlUBTVSlEX1rs0oiMDaale0DndJ
      8W1mUpN0bsJN073136y92YTbphWbTC/36TbI/FctWWurN9c7SFfFTFI0FxP5/d5Hu9XnEwQB
      3W55GFu977twAF9BDeCg1WrR7/erhfKlnb/h5b/AGdYlYb7K9bfW3HIGm6Sj+74NrLUVM4Vq
      vaZVrqS5r7k2hTzdtSZpdZ9xOPAJc5t03bbpVo1fysZ8rTpxWmsZj8dMJpNbc3QEWN3vhiRu
      a7W6tq4zYD0PzJ+z69cV57g0jE2m6ib4yjKAS7dtt9u37P9cl3XCDoHuIFyH9Hr4tDDrCWnu
      niabeJMz6ROBkmprLbK/aE1mmG++1aFuhjWZJ00E70d/Nv2rp0M0mQtNGrJJGzVFfPwxuevu
      /cFuH8w/duUuaCJ+33x0G6Z13NVN4/rarJlQd47i/2cIgqCqGnO2nrVliWKui2p3MgiCtROh
      S5OkLMoQWxywOjPA7fi7uw9uFkBJtZaPVCcAnxHrTuKmNuvfm2DT9SYTadPYNt3XZApugzrB
      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
    </thumbnail>
    <thumbnail height='192' name='Lead Trends' width='192'>
      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
      VvKSYvwPv+8kAuJ6YusAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='NONOxNOy Seasonal' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='NONOxNOy Trends' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='24' name='National Avg' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC9klEQVRYhe2YX0iTURjGf7m5fTbnzFxQMiO3EpZmeRFGdqEJi4iCiG6KQki8CP9Ef9EL
      JcobM5PwqrxIMor+QNEsByWhYWZldREqtKwlRmhO5/SbOe1Cm84ZRrFOoM/lc57zvs95v3Pe
      73zfovHx8XHmMUJEGxCNhQKINiAaCwUQbUA0Fgog2oBoKOcSuMoT/oUPYZizAADNe5uC7UMY
      5v0RWCiAaAM/MeJy0++S8U4nPTL9zgFk769m/T1+qwcEF33UXaim1gEawE0EuSWZKJ/e4ry1
      y6falZ1J+pqI2UN4B3j7wEZVvYvcM5kYwyZo2d7IycqXAXJD2m6O7TAAwgswxqtL1dRGpVGa
      vw4VIPf2MKqEQqtMbnEORm0Ig/ZGCitvYyzJZKV6RgiPg3MFd1Anx2PC5beDpLhUzpdsnOSU
      qJTfuHaiBp1Z79OIPQLDdqxtMRQdmFg8gLQ0mnAFkJSCUTthLzwulYOmIZrfuwNjKPVkFeeQ
      sy+dNToYnTGsUKtQqVWo1CHI7S9oVq9la5w0NT0oC/tNyN2d9ACdLc94+OIjLqWOTZYtrIvV
      gGfIT7tseSjWjq9gXuUfRCGh0wJ8D1j8jGw8utrO5v2HkKaxgptgKNDF49dOVqeuJznWQ1XF
      Zeo63Jja6im49IRXra3U1dygtGGY4b/INGJvxuYxYTFr/HihO0DSR6MhhoNZ29ADJMaTaLjL
      6ZZuSsrypoQbkuD9RUiO+aM83q5Gjlc6KSrbhW7GmNgdoDWSoeviyv0Pk4RMi62TqOjFfP7U
      55N1N92htt9ESuxEpxjpdfC2oycwngyjAedgjOc3X2Les5moWSwIfgtIpB/Zycfie+TVT1KG
      9Zy2rOD60Qre+XRLyS7Y7Xt6joZ7VDXEc7YsA2fdDUptX6ZCFlcAsP1wNpY4CXrfcN0Rw6n8
      6FkdLJrrp6irPOEffAuMMejsZ4QwoiKnWpTsGmDIq0AXqUERpMz/wUUIIITwyCUBrKSN8OvY
      wck8z/EDorzj9yLDsHgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Seasonality Dashboard' width='192'>
      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
      xrN54V+Q/wWop+WgYQFo3AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Toxic Concentration by Category' width='192'>
      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
      9ej/A9SKBtkxJcW2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Toxics Dashboard' width='192'>
      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
      Gi9KOUuicN2KazlDw0O4PG7sFhulbIKi2kw2GcXtXOg5x4b6sHrqKGWzeP03+tBUa+8Oo41C
      obDi99udZW3272w2u6H8b0ced2P662kAy5Ud30nxcW1B2MAwsYqKdMwLcoaxuAafRU1ZhvR8
      AIPRhcfj4MKVfvb1aLh0+jROk4q42sXIYD9f+eLnKcxPEStbqNULfOvZl/jCr/wi2rs0IopW
      q73pw12urr0Z54H3lP/tyONuSP9WseaMQ5RE1ILIqZNvMhMMMTU5xfDYMJPBAO6qBizaCn2D
      E3S1N5KKx7l09jKZXJlYdB5RFJmLRlBpTcyMXuXUidM0tdVzpXdkrWzvKIVsmnS2SCqVWhE4
      HBYWYKn5KGV5YeaYSqdvOJ/Pphgdn1o6Vlm2IyJJErn8cm8VCrFQmEJlpawjNhennEsTiSdv
      SB8URocGyRcX0lXkChV52f2VEsVl6ZUUmXRqpYuY+FwcGYhHAuRK8g15BGcmic1fr/vynZe3
      1yGfThFPrnwOi88QIJNKszyHW/WMbgVrLoI/8vhChBhZfgRx0RZAURaCVogiiiLTqQhL0tqu
      XT3XrlOQZYhF55D0dj7+xEPX77/LGZ+coqKIaDUSs5OjVNfUYnD4UUoCfp+VyYlxVMYMqfAU
      KrOFfLaEy2GkjIqO1mYCUxGcPivHj59CUqsoF7K4XS4KqNje0cLszAzpZAq90UAqkUBVqVBr
      caLVXzMEkoucOHGSe/d2cHkihkWtoqrKi4BwbcFeQa6IDPT3IhcLKKU0uNoohobZdegByrEA
      wwmBXCyE0+1EZTahk2VM5utRGCdGr2AtdJGeuExEnsTr8+MyanFfs7LLZAoEI6NEtBIVRSAQ
      jOBzGvHWd+CymZmdGiEcyWA1mwjPzlDd1Y3dYrrhGZZyKRRZIl8q4vA4KRYrdG9rf8/P6Fax
      5hpgkcWPulyRUS0zXBEEccXC4vpHLiAKCo5FD9DKgmtz6W1Tn/di+L5ZzEej5FFT63MiqVRk
      M2kmg734q1rxyUViiSzaQoj5aACtZKbOZmN8YgCN0QOtgFJmbHIKuVJgNhKipbGBbKZE956O
      pTyMBgsU58mWFAylPNH5OHJGQKPVMD06RnWdn5HRGVRaE/l8gUg4SDpbWtqxCsxOYXM7uDo4
      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
    </thumbnail>
    <thumbnail height='192' name='VOCS Seasonal' width='192'>
      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
      +n/isjEbYv+kiQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='VOCS Trends' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
